[
  {
    "imgname": "bar_87",
    "title_gt": " Employee salaries and benefits in 2021",
    "title_pred": " Employee salaries and benefits in 2021 ",
    "type_gt": "bar_chart",
    "type_pred": "bar_chart_num",
    "csv_gt": "Employee \\t Salary(USD) \\t Benefits(USD) \\n John \\t 5000 \\t 1400 \\n Sarah \\t 4500 \\t 1300 \\n David \\t 4600 \\t 1200 \\n Jane \\t 4200 \\t 1100 \\n ",
    "csv_pred": "Employee \\t Salary \\t Benefits \\n John \\t 6400 \\t 1400 \\n Sarah \\t 5800 \\t 1300 \\n David \\t 5800 \\t 1200 \\n Jane \\t 5300 \\t 1100 \\n ",
    "description_pred": "The chart provided shows the salaries and benefits of five employees in 2021. John has a salary of 6400 and benefits of 1400, Sarah has a salary of 5800 and benefits of 1300, David has a salary of 5800 and benefits of 1200, Jane has a salary of 5300 and benefits of 1100. Overall, it can be seen that the salaries and benefits of the employees are quite varied.</s>",
    "summarization_pred": "The chart shows the salaries and benefits of five employees in 2021. John earned a salary of 6400 and benefits of 1400, Sarah earned a salary of 5800 and benefits of 1300, David earned a salary of 5800 and benefits of 1200, Jane earned a salary of 5300 and benefits of 1100. Overall, it can be seen that the benefits provided to employees are generally higher than their salaries.</s>",
    "redrawing_code_pred": "Here is the Python code to redraw the chart image based on the input provided:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [('John', 6400), ('John', 1400), ('Sarah', 5800), ('Sarah', 1300), ('David', 5800), ('David', 1200), ('Jane', 5300), ('Jane', 1100)]\n\n# Define the title\ntitle = 'Employee salaries and benefits in 2021'\n\n# Define the type of chart\ntype = 'bar_chart_num'\n\n# Create the chart\nfig, ax = plt.subplots()\nax.bar(data, title=title, color='blue', width=0.8)\n\n# Show the chart\nplt.show()\n```\nThis code will create a bar chart using the matplotlib library in Python, with the data provided in the input. The chart will be titled \"Employee salaries and benefits in 2021\" and will be of the type \"bar\\_chart\\_num\". The resulting chart will be displayed using the `plt.show()` function.</s>",
    "QA": {
      "question": "How much more is John's salary compared to Jane's?",
      "answer_gt": "$800",
      "answer_pred": "John's salary is $6400, and Jane's salary is $5300. Therefore, John's salary is $1100 more than Jane's salary.</s>"
    }
  },
  {
    "imgname": "bar_85",
    "title_gt": " Healthcare facilities and personnel in four regions in 2021",
    "title_pred": " Healthcare facilities and personnel in four regions in 2021 ",
    "type_gt": "bar_chart",
    "type_pred": "bar_chart",
    "csv_gt": "Region \\t Hospitals \\t Doctors \\t Nurses \\n North \\t 80 \\t 500 \\t 2500 \\n South \\t 90 \\t 550 \\t 2700 \\n East \\t 85 \\t 600 \\t 3000 \\n West \\t 100 \\t 550 \\t 2800 \\n ",
    "csv_pred": "Region \\t Hospitals \\t Doctors \\t Nurses \\n North \\t 50 \\t 500 \\t 3050 \\n South \\t 60 \\t 650 \\t 3300 \\n East \\t 70 \\t 700 \\t 3700 \\n West \\t 80 \\t 650 \\t 3450 \\n ",
    "description_pred": "The bar chart provided shows the distribution of healthcare facilities and personnel in four regions in 2021. The regions are North, South, East, and West. The x-axis represents the regions, while the y-axis represents the number of hospitals, doctors, and nurses.\n\nAccording to the chart, the North region has the highest number of hospitals with 50, followed by the South region with 60 hospitals. The East region has 70 hospitals, while the West region has 80 hospitals. In terms of doctors, the North region has the highest number with 500, followed by the South region with 650 doctors. The East region has 700 doctors, while the West region has 650 doctors.\n\nRegarding nurses, the North region has the highest number with 3050 nurses, followed by the South region with 3300 nurses. The East region has 3700 nurses, while the West region has 3450 nurses.\n\nOverall, the chart provides a clear picture of the distribution of healthcare facilities and personnel in the four regions in 2021.</s>",
    "summarization_pred": "The chart shows the distribution of healthcare facilities and personnel in four regions in 2021. The North region has the highest number of hospitals, doctors, and nurses, while the South region has the lowest number of hospitals and nurses. The East region has more hospitals and nurses than the West region, but fewer doctors. Overall, the chart highlights the disparities in healthcare resources across different regions.</s>",
    "redrawing_code_pred": "Here is the Python code to redraw the chart image based on the input provided:\n```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots()\n\ndata = [\n    ('North', 50, 500, 3050),\n    ('South', 60, 650, 3300),\n    ('East', 70, 700, 3700),\n    ('West', 80, 650, 3450)\n]\n\nax.bar(data, color='skyblue')\nax.set_title('Healthcare facilities and personnel in four regions in 2021', fontsize=16)\nax.set_xlabel('Region', fontsize=12)\nax.set_ylabel('Number of Hospitals/Doctors/Nurses', fontsize=12)\n\nplt.tight_layout()\nplt.show()\n```\nThis code will create a bar chart with the title, x-axis, y-axis, and labels as specified in the input. The chart will show the number of hospitals, doctors, and nurses in each of the four regions in 2021.</s>",
    "QA": {
      "question": "How many more nurses are there in the East region compared to the North region?",
      "answer_gt": "500",
      "answer_pred": "The East region has 3700 nurses, while the North region has 3050 nurses. Therefore, there are 650 more nurses in the East region compared to the North region.</s>"
    }
  },
  {
    "imgname": "line_51",
    "title_gt": " Price of Artworks and Photographs in the Year 2021",
    "title_pred": " Price of Artworks and Photographs in the Year 2021 ",
    "type_gt": "line_chart",
    "type_pred": "line_chart",
    "csv_gt": "Month \\t Painting A \\t Painting B \\t Photography A \\t Photography B \\n Jan \\t 4000 \\t 3500 \\t 2500 \\t 3000 \\n Feb \\t 3000 \\t 4000 \\t 2800 \\t 3200 \\n Mar \\t 3500 \\t 3000 \\t 2300 \\t 3600 \\n Apr \\t 3800 \\t 3200 \\t 2500 \\t 3500 \\n ",
    "csv_pred": "Month \\t Painting A \\t Painting B \\t Photography A \\t Photography B \\n Jan \\t 4000 \\t 3500 \\t 3000 \\t 3000 \\n Feb \\t 3000 \\t 4000 \\t 3200 \\t 2800 \\n Mar \\t 3500 \\t 3600 \\t 3000 \\t 3500 \\n Apr \\t 3800 \\t 3400 \\t 3500 \\t 3500 \\n ",
    "description_pred": "The line chart provided shows the price of artworks and photographs in the year 2021. In January, painting A had a price of 4000, while painting B had a price of 3500. Photography A had a price of 3000, while photography B had a price of 3000. In February, painting A had a price of 3000, while painting B had a price of 4000. Photography A had a price of 3200, while photography B had a price of 2800. In March, painting A had a price of 3500, while painting B had a price of 3600. Photography A had a price of 3000, while photography B had a price of 3500. In April, painting A had a price of 3800, while painting B had a price of 3400. Photography A had a price of 3500, while photography B had a price of 3500. Overall, it can be seen that the prices of artworks and photographs fluctuated throughout the year, with some months showing an increase in price while others showed a decrease.</s>",
    "summarization_pred": "The chart shows the price of artworks and photographs in the year 2021. In January, painting A had a price of 4000, while painting B had a price of 3500. For photography A, the price was 3000, and for photography B, the price was also 3000. In February, painting A had a price of 3000, while painting B had a price of 4000. Photography A had a price of 3200, and photography B had a price of 2800. In March, painting A had a price of 3500, while painting B had a price of 3600. Photography A had a price of 3000, and photography B had a price of 3500. In April, painting A had a price of 3800, while painting B had a price of 3400. Photography A had a price of 3500, and photography B had a price of 3500. Overall, it can be seen that the prices of artworks and photographs fluctuated throughout the year, with some months showing an increase in price and others showing a decrease.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, we can use the Matplotlib library. Here is an example code that can be used to create a line chart based on the data provided:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [('Jan', 4000), ('Jan', 3500), ('Jan', 3000), ('Feb', 3000), ('Feb', 3200), ('Mar', 3500), ('Mar', 3600), ('Apr', 3800), ('Apr', 3400), ('Apr', 3500)]\n\n# Define the title and type of the chart\ntitle = 'Price of Artworks and Photographs in the Year 2021'\ntype = 'line_chart'\n\n# Create the chart\nplt.plot(data, marker='o')\nplt.title(title)\nplt.xlabel('Month')\nplt.ylabel('Price')\nplt.xticks(rotation=45)\nplt.grid()\nplt.show()\n```\nThis code will create a line chart with the title and type specified, using the data provided. The chart will be displayed using the `plt.show()` function.</s>",
    "QA": {
      "question": "What was the price of Photography B in January?",
      "answer_gt": "$3000",
      "answer_pred": "The price of Photography B in January was 3000.</s>"
    }
  },
  {
    "imgname": "line_71",
    "title_gt": " Renewable energy use in the US during the first half of 2021",
    "title_pred": " Renewable energy use in the US during the first half of 2021 ",
    "type_gt": "line_chart",
    "type_pred": "line_chart",
    "csv_gt": "Month \\t Wind Energy(kWh) \\t Solar Energy(kWh) \\t Hydro Energy(kWh) \\n January \\t 1000 \\t 1200 \\t 800 \\n February \\t 1400 \\t 1100 \\t 900 \\n March \\t 1500 \\t 1300 \\t 1200 \\n April \\t 1800 \\t 1400 \\t 1600 \\n May \\t 1300 \\t 1600 \\t 1000 \\n ",
    "csv_pred": "Month \\t Wind Energy(kWh) \\t Solar Energy(kWh) \\t Hydro Energy(kWh) \\n January \\t 1000 \\t 1200 \\t 800 \\n February \\t 1400 \\t 1100 \\t 900 \\n March \\t 1500 \\t 1300 \\t 1200 \\n April \\t 1800 \\t 1400 \\t 1600 \\n May \\t 1300 \\t 1600 \\t 1000 \\n ",
    "description_pred": "The line chart provided shows the usage of renewable energy sources in the US during the first half of 2021. Starting from January, the chart displays the consumption of Wind Energy, Solar Energy, and Hydro Energy in kilowatt hours (kWh).\n\nIn January, Wind Energy consumption was at 1000 kWh, while Solar Energy consumption was at 1200 kWh, and Hydro Energy consumption was at 800 kWh. As the months progressed, the usage of each energy source fluctuated. In February, Wind Energy consumption increased to 1400 kWh, while Solar Energy consumption decreased to 1100 kWh, and Hydro Energy consumption remained at 900 kWh.\n\nMoving on to March, Wind Energy consumption rose to 1500 kWh, Solar Energy consumption remained at 1300 kWh, and Hydro Energy consumption decreased to 1200 kWh. In April, Wind Energy consumption surged to 1800 kWh, Solar Energy consumption decreased to 1400 kWh, and Hydro Energy consumption increased to 1600 kWh.\n\nIn May, Wind Energy consumption decreased to 1300 kWh, Solar Energy consumption increased to 1600 kWh, and Hydro Energy consumption decreased to 1000 kWh. Overall, the chart illustrates the fluctuating usage of renewable energy sources in the US during the first half of 2021.</s>",
    "summarization_pred": "The chart shows the use of renewable energy sources in the US during the first half of 2021. Wind energy consumption increased from 1000 kWh in January to 1800 kWh in April, while solar energy consumption increased from 1200 kWh in January to 1600 kWh in May. Hydro energy consumption remained relatively stable throughout the period, fluctuating between 800 and 1200 kWh. The chart provides a clear picture of the growth in renewable energy use in the US during the first half of 2021.</s>",
    "redrawing_code_pred": "Here is the Python code to redraw the chart image based on the input data and title provided:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [\n    (January, Wind Energy(kWh), 1000),\n    (January, Solar Energy(kWh), 1200),\n    (January, Hydro Energy(kWh), 800),\n    (February, Wind Energy(kWh), 1400),\n    (February, Solar Energy(kWh), 1100),\n    (February, Hydro Energy(kWh), 900),\n    (March, Wind Energy(kWh), 1500),\n    (March, Solar Energy(kWh), 1300),\n    (March, Hydro Energy(kWh), 1200),\n    (April, Wind Energy(kWh), 1800),\n    (April, Solar Energy(kWh), 1400),\n    (April, Hydro Energy(kWh), 1600),\n    (May, Wind Energy(kWh), 1300),\n    (May, Solar Energy(kWh), 1600),\n    (May, Hydro Energy(kWh), 1000)\n]\n\n# Define the title\ntitle = \"Renewable energy use in the US during the first half of 2021\"\n\n# Define the chart type\ntype = \"line_chart\"\n\n# Create the chart\nplt.plot(data, label=\"Renewable Energy Use\")\nplt.title(title)\nplt.xlabel(\"Month\")\nplt.ylabel(\"Energy (kWh)\")\nplt.legend()\nplt.show()\n```\nThis code will create a line chart showing the renewable energy use in the US during the first half of 2021, with the title and type specified in the input.</s>",
    "QA": {
      "question": "Which month had the highest wind energy production?",
      "answer_gt": "April",
      "answer_pred": "\nThe month with the highest wind energy production is April, with a production of 1800 kWh.</s>"
    }
  },
  {
    "imgname": "pie_426",
    "title_gt": " Common Law Violations in the United States, 2023",
    "title_pred": " Common Law Violations in the United States, 2023 ",
    "type_gt": "pie_chart",
    "type_pred": "pie_chart",
    "csv_gt": "Violations \\t Percentage \\n Property Damage \\t 25% \\n Traffic Violations \\t 20% \\n Drug Use \\t 15% \\n Disorderly Conduct \\t 15% \\n Public Intoxication \\t 10% \\n Disorderly Assembly \\t 10% \\n Other \\t 15% \\n ",
    "csv_pred": "Common Law Violations \\t Percentage \\n Property Damage \\t 25% \\n Traffic Violations \\t 15% \\n Drug Use \\t 10% \\n Disorderly Conduct \\t 5% \\n Public Intoxication \\t 5% \\n Disorderly Assembly \\t 5% \\n Other \\t 5% \\n ",
    "description_pred": "The Common Law Violations in the United States, 2023 chart shows the percentage of each type of violation that occurred in the year 2023. According to the chart, Property Damage was the most common violation, accounting for 25% of all incidents. Traffic Violations were the second most common, making up 15% of all incidents. Drug Use, Disorderly Conduct, Public Intoxication, and Disorderly Assembly were all tied for third place, each accounting for 5% of all incidents. Finally, Other violations made up the remaining 5% of all incidents. Overall, the chart provides a clear picture of the most common types of law violations in the United States in 2023.</s>",
    "summarization_pred": "The chart shows the percentage of common law violations in the United States in 2023. Property damage accounts for 25% of the total, followed by traffic violations at 15%, drug use at 10%, disorderly conduct at 5%, public intoxication at 5%, disorderly assembly at 5%, and other violations at 5%.</s>",
    "redrawing_code_pred": "Here is the Python code to redraw the chart image based on the provided input:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data for the chart\ndata = [\n    ('Property Damage', 25),\n    ('Traffic Violations', 15),\n    ('Drug Use', 10),\n    ('Disorderly Conduct', 5),\n    ('Public Intoxication', 5),\n    ('Disorderly Assembly', 5),\n    ('Other', 5)\n]\n\n# Define the title and type of chart\ntitle = 'Common Law Violations in the United States, 2023'\ntype = 'pie_chart'\n\n# Create the chart using matplotlib\nfig, ax = plt.subplots()\nax.pie(data, labels=data[1], autopct='%1.1f%%', startangle=90, textprops={'fontsize': 12})\n\n# Set the title and axis labels\nax.set_title(title, fontsize=16)\nax.set_xlabel('Common Law Violations', fontsize=12)\nax.set_ylabel('Percentage', fontsize=12)\n\n# Show the chart\nplt.show()\n```\nThis code will create a pie chart using the matplotlib library in Python, with the data and title specified in the input. The chart will be displayed using the `plt.show()` function.</s>",
    "QA": {
      "question": "What percentage of common law violations is attributed to \"Public Intoxication\"?",
      "answer_gt": "10%",
      "answer_pred": "Public Intoxication is attributed to 5% of common law violations.</s>"
    }
  },
  {
    "imgname": "pie_405",
    "title_gt": " Taxation Distribution in the USA, 2023",
    "title_pred": " Taxation Distribution in the USA, 2023 ",
    "type_gt": "pie_chart",
    "type_pred": "pie_chart",
    "csv_gt": "Tax Categories \\t Percentage \\n Income Tax \\t 45% \\n Property Tax \\t 25% \\n Sales Tax \\t 17% \\n Excise Tax \\t 9% \\n Other Taxes \\t 4% \\n ",
    "csv_pred": "Tax Category \\t Percentage \\n Income Tax \\t 45% \\n Property Tax \\t 25% \\n Sales Tax \\t 17% \\n Excise Tax \\t 9% \\n Other Tax \\t 1% \\n ",
    "description_pred": "The Taxation Distribution in the USA, 2023 shows the breakdown of various taxes imposed on individuals and businesses in the United States. According to the chart, Income Tax accounts for 45% of the total tax revenue, followed by Property Tax at 25%, Sales Tax at 17%, Excise Tax at 9%, and Other Tax at 1%. The chart is presented in the form of a pie graph, with each tax category represented by a slice of the pie. The size of each slice corresponds to the percentage of the total tax revenue that it represents. For instance, the largest slice representing Income Tax takes up 45% of the total, while the smallest slice representing Other Tax takes up only 1% of the total. This chart provides a clear visual representation of the distribution of taxes in the USA, allowing for easy understanding of the relative importance of each tax category.</s>",
    "summarization_pred": "The chart provided shows the distribution of taxes in the USA in 2023. The largest percentage of taxes, 45%, is collected through Income Tax. Property Tax accounts for 25% of taxes, while Sales Tax makes up 17%. Excise Tax accounts for 9% of taxes, and Other Tax accounts for 1% of taxes. Overall, Income Tax is the largest contributor to the tax revenue of the USA.</s>",
    "redrawing_code_pred": "Here is the Python code to redraw the chart image with the given input:\n```python\nimport matplotlib.pyplot as plt\n\ndata = [('Income Tax', 45), ('Property Tax', 25), ('Sales Tax', 17), ('Excise Tax', 9), ('Other Tax', 1)]\ntitle = 'Taxation Distribution in the USA, 2023'\ntype = 'pie_chart'\n\nfig, ax = plt.subplots()\nax.pie(data, labels=data[1], autopct='%1.1f%%', startangle=90, textprops={'fontsize': 12})\nax.set_title(title, fontsize=16)\nax.axis('equal')\nplt.show()\n```\nThis code uses the `matplotlib` library to create a pie chart with the given data and title. The `pie` function is used to create the chart, and the `autopct` parameter is used to format the percentages displayed in the chart. The `startangle` parameter is used to set the starting angle of the chart, and the `textprops` parameter is used to set the font size of the chart labels. Finally, the `show` function is used to display the chart.</s>",
    "QA": {
      "question": "What percentage is Sales Tax of the total taxation?",
      "answer_gt": "17%",
      "answer_pred": "Sales Tax is 17% of the total taxation.</s>"
    }
  },
  {
    "imgname": "bar_num_293",
    "title_gt": " Coffee and Tea Consumption in Four Countries in 2021",
    "title_pred": " Coffee and Tea Consumption in Four Countries in 2021 ",
    "type_gt": "bar_chart_num",
    "type_pred": "bar_chart",
    "csv_gt": "Country \\t Coffee Consumption(kg/year) \\t Tea Consumption(kg/year) \\n USA \\t 400 \\t 200 \\n UK \\t 350 \\t 230 \\n Germany \\t 300 \\t 180 \\n France \\t 250 \\t 220 \\n ",
    "csv_pred": "Country \\t Coffee Consumption(kg/year) \\t Tea Consumption(kg/year) \\n USA \\t 600 \\t 200 \\n UK \\t 580 \\t 230 \\n Germany \\t 480 \\t 180 \\n France \\t 470 \\t 220 \\n ",
    "description_pred": "The bar chart provided shows the coffee and tea consumption in four countries in 2021. The countries included in the chart are the USA, UK, Germany, and France. According to the data, the USA has the highest coffee consumption at 600 kilograms per year, followed by Germany with 480 kilograms per year. The UK has a moderate coffee consumption of 580 kilograms per year, while France has the lowest coffee consumption at 470 kilograms per year.\n\nIn terms of tea consumption, the UK has the highest consumption at 230 kilograms per year, followed by France with 220 kilograms per year. Germany has a moderate tea consumption of 180 kilograms per year, while the USA has the lowest tea consumption at 200 kilograms per year.\n\nOverall, the chart shows that the USA has the highest overall consumption of both coffee and tea, followed by Germany and France. The UK has a moderate consumption of both beverages.</s>",
    "summarization_pred": "The chart shows the coffee and tea consumption in four countries, including the USA, UK, Germany, and France, in 2021. The data indicates that the USA has the highest coffee consumption at 600 kg/year, followed by Germany with 480 kg/year. The UK has the highest tea consumption at 200 kg/year, while France has the second-highest tea consumption at 220 kg/year. Overall, the chart provides a visual representation of the coffee and tea consumption habits of these four countries.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, you can use the Matplotlib library. Here is an example code that you can modify to fit your needs:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [\n    (USA, 600),\n    (USA, 200),\n    (UK, 580),\n    (UK, 230),\n    (Germany, 480),\n    (Germany, 180),\n    (France, 470),\n    (France, 220)\n]\n\n# Define the title and type of the chart\ntitle = \"Coffee and Tea Consumption in Four Countries in 2021\"\ntype = \"bar_chart\"\n\n# Create the figure and axes\nfig, ax = plt.subplots()\n\n# Create the bar chart\nax.bar(data, label=[\"Coffee Consumption\", \"Tea Consumption\"])\n\n# Set the title and axis labels\nax.set_title(title)\nax.set_xlabel(\"Country\")\nax.set_ylabel(\"Consumption (kg/year)\")\n\n# Add the labels to the bars\nfor i, (country, consumption) in enumerate(data):\n    ax.text(i, consumption, f\"{country}: {consumption} kg/year\", ha=\"center\", va=\"bottom\")\n\n# Show the chart\nplt.show()\n```\nThis code creates a bar chart with the data provided in the input, and displays it using Matplotlib. You can modify the data, title, and other parameters to create the chart you need.</s>",
    "QA": {
      "question": "What is the total consumption of coffee and tea in France (in kg/year)?",
      "answer_gt": "470 kg/year",
      "answer_pred": "The total consumption of coffee and tea in France is 470 kg/year for coffee and 220 kg/year for tea.</s>"
    }
  },
  {
    "imgname": "bar_num_23",
    "title_gt": " Freight transportation in four regions in 2021",
    "title_pred": " Freight transportation in four regions in 2021 ",
    "type_gt": "bar_chart_num",
    "type_pred": "bar_chart_num",
    "csv_gt": "Region \\t Air Freight(tons) \\t Ground Freight(tons) \\t Water Freight(tons) \\n North America \\t 1000 \\t 1500 \\t 1200 \\n Europe \\t 900 \\t 1300 \\t 1100 \\n Asia \\t 1100 \\t 1400 \\t 1200 \\n South America \\t 800 \\t 1500 \\t 1400 \\n ",
    "csv_pred": "Region \\t Air Freight(tons) \\t Ground Freight(tons) \\t Water Freight(tons) \\n North America \\t 1000 \\t 1500 \\t 1200 \\n Europe \\t 900 \\t 1300 \\t 1100 \\n Asia \\t 1100 \\t 1400 \\t 1200 \\n South America \\t 800 \\t 1500 \\t 1400 \\n ",
    "description_pred": "The chart provided shows the freight transportation in four regions in 2021. The regions included in the chart are North America, Europe, Asia, and South America. The data presented in the chart is in tons and includes air freight, ground freight, and water freight.\n\nAccording to the chart, North America had the highest amount of air freight with 1000 tons, followed by Europe with 900 tons, Asia with 1100 tons, and South America with 800 tons. In terms of ground freight, North America had the highest amount with 1500 tons, followed by Europe with 1300 tons, Asia with 1400 tons, and South America with 1500 tons. Finally, in terms of water freight, North America had the highest amount with 1200 tons, followed by Europe with 1100 tons, Asia with 1200 tons, and South America with 1400 tons.\n\nOverall, the chart provides a useful overview of the freight transportation in these four regions in 2021, highlighting the different modes of transportation and their respective amounts.</s>",
    "summarization_pred": "The chart shows the comparison of air, ground, and water freight transportation in four regions in 2021. North America had the highest air freight volume at 1000 tons, followed by Europe with 900 tons. Asia had the highest ground freight volume at 1400 tons, while South America had the highest water freight volume at 1200 tons. Overall, air freight was the most dominant mode of transportation in North America and Asia, while ground freight was more popular in Europe and South America.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, you can use the Matplotlib library. Here is an example code that you can modify to fit your needs:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [\n    (North America, Air Freight, 1000),\n    (North America, Ground Freight, 1500),\n    (North America, Water Freight, 1200),\n    (Europe, Air Freight, 900),\n    (Europe, Ground Freight, 1300),\n    (Europe, Water Freight, 1100),\n    (Asia, Air Freight, 1100),\n    (Asia, Ground Freight, 1400),\n    (Asia, Water Freight, 1200),\n    (South America, Air Freight, 800),\n    (South America, Ground Freight, 1500),\n    (South America, Water Freight, 1400)\n]\n\n# Define the title and type of the chart\ntitle = 'Freight transportation in four regions in 2021'\ntype = 'bar_chart_num'\n\n# Create the chart\nfig, ax = plt.subplots()\nax.bar(data, title=title, color='blue', alpha=0.8)\n\n# Set the axis labels and title\nax.set_xlabel('Region')\nax.set_ylabel('Freight (tons)')\nax.set_title(title)\n\n# Show the chart\nplt.show()\n```\nThis code creates a bar chart using the Matplotlib library, with the data provided in the input. You can modify the data, title, and other parameters to fit your needs.</s>",
    "QA": {
      "question": "How much more air freight is there in Asia compared to Europe?",
      "answer_gt": "200 tons",
      "answer_pred": "The answer to the question \"How much more air freight is there in Asia compared to Europe?\" is 200 tons.</s>"
    }
  },
  {
    "imgname": "line_num_99",
    "title_gt": " Number of Crimes and Arrests in the US from 2012 to 2017",
    "title_pred": " Number of Crimes and Arrests in the US from 2012 to 2017 ",
    "type_gt": "line_chart_num",
    "type_pred": "line_chart_num",
    "csv_gt": "Year \\t Number of Crimes \\t Number of Arrests \\n 2012 \\t 1000 \\t 200 \\n 2013 \\t 1200 \\t 400 \\n 2014 \\t 1400 \\t 600 \\n 2015 \\t 1600 \\t 800 \\n 2016 \\t 1800 \\t 1000 \\n 2017 \\t 2000 \\t 1200 \\n ",
    "csv_pred": "Year \\t Number of Crimes \\t Number of Arrests \\n 2017 \\t 2000 \\t 1200 \\n 2016 \\t 1800 \\t 1000 \\n 2015 \\t 1600 \\t 800 \\n 2014 \\t 1400 \\t 600 \\n 2013 \\t 1200 \\t 400 \\n 2012 \\t 1000 \\t 200 \\n ",
    "description_pred": "The line chart shows the number of crimes and arrests in the US from 2012 to 2017. In 2012, there were 1000 crimes and 200 arrests. In 2013, the number of crimes increased to 1200, while the number of arrests remained at 400. In 2014, the number of crimes continued to rise to 1400, and the number of arrests increased to 600. In 2015, the number of crimes decreased slightly to 1600, while the number of arrests remained at 800. In 2016, the number of crimes decreased further to 1800, and the number of arrests decreased to 1000. In 2017, the number of crimes decreased even more to 2000, while the number of arrests increased to 1200. Overall, the chart shows a fluctuating pattern of crimes and arrests in the US over the years, with some years experiencing an increase in both crimes and arrests, while others show a decrease in both.</s>",
    "summarization_pred": "The chart shows the number of crimes and arrests in the US from 2012 to 2017. It can be observed that the number of crimes increased from 2012 to 2013, then decreased in 2014 before increasing again in 2015. The number of arrests followed a similar trend, with a slight increase in 2013 and 2014, followed by a decrease in 2015. In 2016, both the number of crimes and arrests saw a significant increase, followed by a slight decrease in 2017. Overall, it can be seen that there was a fluctuating pattern in the number of crimes and arrests over the five-year period, with some years showing an increase and others showing a decrease.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, we can use the Matplotlib library. Here is an example code that can be used to create a line chart with the given data:\n```python\nimport matplotlib.pyplot as plt\n\ndata = [(2017, 2000), (2017, 1200), (2016, 1800), (2016, 1000), (2015, 1600), (2015, 800), (2014, 1400), (2014, 600), (2013, 1200), (2013, 400), (2012, 1000), (2012, 200)]\n\ntitle = \"Number of Crimes and Arrests in the US from 2012 to 2017\"\n\ntype = \"line_chart_num\"\n\nplt.plot(data[0], data[1], label=\"Number of Crimes\")\nplt.plot(data[2], data[3], label=\"Number of Arrests\")\nplt.title(title)\nplt.xlabel(\"Year\")\nplt.ylabel(\"Number of Crimes/Arrests\")\nplt.legend()\nplt.show()\n```\nThis code will create a line chart with the title \"Number of Crimes and Arrests in the US from 2012 to 2017\" and will display the data in a line chart format.</s>",
    "QA": {
      "question": "How many arrests were made in 2014?",
      "answer_gt": "600",
      "answer_pred": "The number of arrests in 2014 was 600.</s>"
    }
  },
  {
    "imgname": "line_num_307",
    "title_gt": " Tourist traffic in a popular tourist city in 2020",
    "title_pred": " Tourist traffic in a popular tourist city in 2020 ",
    "type_gt": "line_chart_num",
    "type_pred": "line_chart_num",
    "csv_gt": "Month \\t Hotel Occupancy Rate(%) \\t Airline Passengers(million) \\n January \\t 60 \\t 2.5 \\n February \\t 63 \\t 2.8 \\n March \\t 72 \\t 3.2 \\n April \\t 68 \\t 2.9 \\n May \\t 71 \\t 3.3 \\n June \\t 77 \\t 3.7 \\n July \\t 83 \\t 4.2 \\n August \\t 81 \\t 4.1 \\n September \\t 73 \\t 3.5 \\n October \\t 69 \\t 3.2 \\n November \\t 65 \\t 2.7 \\n December \\t 62 \\t 2.6 \\n ",
    "csv_pred": "Month \\t Hotel Occupancy Rate(%) \\t Airline Passengers(million) \\n January \\t 2.5 \\t 2.8 \\n February \\t 2.8 \\t 2.9 \\n March \\t 3.2 \\t 3.2 \\n April \\t 3.3 \\t 2.9 \\n May \\t 3.4 \\t 2.9 \\n June \\t 3.6 \\t 2.9 \\n July \\t 4.0 \\t 3.0 \\n August \\t 4.1 \\t 3.1 \\n September \\t 4.2 \\t 3.2 \\n October \\t 4.3 \\t 3.3 \\n November \\t 4.5 \\t 3.4 \\n December \\t 4.6 \\t 3.5 \\n ",
    "description_pred": "The provided chart shows the hotel occupancy rate and airline passengers for a popular tourist city in 2020. The data is presented in a line chart format, with the hotel occupancy rate on the left axis and airline passengers on the right axis. The chart is labeled with the months of the year, starting from January and ending in December.\n\nIn January, the hotel occupancy rate was at 2.5%, while airline passengers reached 2.8 million. In February, both the hotel occupancy rate and airline passengers remained relatively stable, with rates of 2.8% and 2.9 million, respectively. In March, the hotel occupancy rate increased to 3.2%, while airline passengers remained at 3.2 million.\n\nApril saw a slight increase in the hotel occupancy rate to 3.3%, while airline passengers decreased to 2.9 million. In May, the hotel occupancy rate continued to rise, reaching 3.4%, while airline passengers remained at 2.9 million. June saw a slight increase in airline passengers to 3.0 million, while the hotel occupancy rate remained at 3.6%.\n\nJuly showed a significant increase in both the hotel occupancy rate and airline passengers, with rates of 4.0% and 3.0 million, respectively. August experienced a similar increase, with the hotel occupancy rate reaching 4.1% and airline passengers at 3.1 million. In September, the hotel occupancy rate continued to rise, reaching 4.2%, while airline passengers remained at 3.2 million.\n\nOctober saw a slight decrease in airline passengers to 3.3 million, while the hotel occupancy rate remained at 4.3%. November experienced a slight increase in airline passengers to 3.4 million, while the hotel occupancy rate remained at 4.5%. December showed a significant increase in both the hotel occupancy rate and airline passengers, with rates of 4.6% and 3.5 million, respectively.\n\nOverall, the chart shows a steady increase in both the hotel occupancy rate and airline passengers throughout the year, with a few minor fluctuations. The data suggests that the popular tourist city experienced a busy and thriving tourist season in 2020.</s>",
    "summarization_pred": "The chart shows the hotel occupancy rate and airline passengers for a popular tourist city in 2020. In January, the hotel occupancy rate was 2.5%, and airline passengers were 2.8 million. In February, the hotel occupancy rate increased to 2.8%, and airline passengers remained at 2.8 million. In March, the hotel occupancy rate rose to 3.2%, and airline passengers also increased to 3.2 million. In April, the hotel occupancy rate remained at 3.3%, while airline passengers decreased to 2.9 million. In May, the hotel occupancy rate increased to 3.4%, and airline passengers remained at 2.9 million. In June, the hotel occupancy rate increased to 3.6%, and airline passengers remained at 2.9 million. In July, the hotel occupancy rate rose to 4.0%, and airline passengers increased to 3.0 million. In August, the hotel occupancy rate remained at 4.1%, while airline passengers increased to 3.1 million. In September, the hotel occupancy rate rose to 4.2%, and airline passengers remained at 3.2 million. In October, the hotel occupancy rate increased to 4.3%, and airline passengers remained at 3.3 million. In November, the hotel occupancy rate increased to 4.5%, and airline passengers increased to 3.4 million. In December, the hotel occupancy rate rose to 4.6%, and airline passengers increased to 3.5 million. Overall, there was a steady increase in both hotel occupancy rate and airline passengers throughout the year, with a slight decrease in airline passengers in April.</s>",
    "redrawing_code_pred": "To redraw the chart using Python code, we can use the Matplotlib library. Here is the code:\n```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots()\n\n# Plot the data\nax.plot([\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n        [2.5, 2.8, 2.9, 3.2, 3.4, 3.6, 4.0, 3.1, 3.2, 3.3, 4.2, 4.5, 4.6],\n        color='blue', marker='o')\n\n# Set the title and axis labels\nax.set_title('Tourist traffic in a popular tourist city in 2020')\nax.set_xlabel('Month')\nax.set_ylabel('Number of Tourists')\n\n# Set the axis limits\nax.set_xlim([datetime.datetime(2020, 1, 1), datetime.datetime(2020, 12, 31)])\nax.set_ylim([0, 5])\n\n# Show the plot\nplt.show()\n```\nThis code will create a line chart with the data provided, using the Matplotlib library. The chart will have a blue line with blue circles representing the data points, and the title and axis labels will be set to \"Tourist traffic in a popular tourist city in 2020\". The axis limits will also be set to the dates and values provided in the input. Finally, the plot will be displayed using the `plt.show()` function.</s>",
    "QA": {
      "question": "How many more million airline passengers were there in July compared to February?",
      "answer_gt": "1.4 million",
      "answer_pred": "\nThe number of airline passengers in July was 3.0 million, and the number of airline passengers in February was 2.8 million. Therefore, there were 0.2 million more airline passengers in July compared to February.</s>"
    }
  },
  {
    "imgname": "rings_76",
    "title_gt": " Energy and Utilities Utilisation - 2023",
    "title_pred": " Energy and Utilities Utilisation - 2023 ",
    "type_gt": "rings",
    "type_pred": "rings",
    "csv_gt": "Category \\t ratio \\n Renewable Energy \\t 17% \\n Oil and Gas \\t 37% \\n Electricity \\t 25% \\n Nuclear Power \\t 14% \\n Other Resources \\t 7% \\n ",
    "csv_pred": "Category \\t ratio \\n Renewable Energy \\t 37% \\n Oil and Gas \\t 25% \\n Electricity Energy \\t 15% \\n Nuclear Power \\t 10% \\n Other Resources \\t 15% \\n ",
    "description_pred": "The provided chart image depicts the utilization of various energy resources in the year 2023. According to the chart, Renewable Energy accounts for 37% of the total energy consumption, followed by Oil and Gas with a ratio of 25%. Electricity Energy makes up 15% of the total energy consumption, while Nuclear Power accounts for 10%. Lastly, Other Resources contribute 15% to the total energy consumption. The chart is presented in the form of rings, with each ring representing a different energy resource and its corresponding ratio.</s>",
    "summarization_pred": "The chart provided shows the utilization of various energy sources in the year 2023. Renewable energy sources accounted for 37% of the total energy consumption, while oil and gas made up 25%. Electricity energy accounted for 15%, nuclear power accounted for 10%, and other resources made up the remaining 15%. Overall, the chart indicates a shift towards renewable energy sources as the primary source of energy.</s>",
    "redrawing_code_pred": "Here is the Python code to redraw the chart image based on the provided input:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data for the chart\ndata = [\n    ('Renewable Energy', 0.37),\n    ('Oil and Gas', 0.25),\n    ('Electricity Energy', 0.15),\n    ('Nuclear Power', 0.1),\n    ('Other Resources', 0.15)\n]\n\n# Define the title and type of the chart\ntitle = 'Energy and Utilities Utilisation - 2023'\ntype = 'rings'\n\n# Create the chart using matplotlib\nfig, ax = plt.subplots()\nax.pie(data, labels=data[1], autopct='%1.1f%%', startangle=90, textprops={'fontsize': 12})\nax.set_title(title, fontsize=16)\nax.axis('equal')\n\n# Show the chart\nplt.show()\n```\nThis code will create a pie chart using the matplotlib library in Python, with the data and title specified in the input. The chart will be displayed using the `plt.show()` function.</s>",
    "QA": {
      "question": "How much is the utilisation ratio for Oil and Gas?",
      "answer_gt": "37%",
      "answer_pred": "The utilisation ratio for Oil and Gas is 25%.</s>"
    }
  },
  {
    "imgname": "rings_114",
    "title_gt": " Government and Public Policy Overview - 2023",
    "title_pred": " Government and Public Policy Overview - 2023 ",
    "type_gt": "rings",
    "type_pred": "rings",
    "csv_gt": "Sector \\t ratio \\n Education \\t 30% \\n Social Welfare \\t 22% \\n Infrastructure \\t 25% \\n Security \\t 15% \\n Transparency \\t 8% \\n ",
    "csv_pred": "Category \\t ratio \\n Education \\t 25% \\n Social Welfare \\t 15% \\n Infrastructure \\t 15% \\n Security \\t 10% \\n Transparency \\t 5% \\n ",
    "description_pred": "The Government and Public Policy Overview for 2023 presents a comprehensive view of the government's priorities and initiatives in various sectors. The chart depicts the allocation of resources in terms of percentages across five key areas: Education, Social Welfare, Infrastructure, Security, and Transparency.\n\nEducation receives the highest allocation of 25%, highlighting the government's commitment to providing quality education to its citizens. Social Welfare is allocated 15%, indicating the government's focus on ensuring the well-being of its citizens, particularly the vulnerable and marginalized populations.\n\nInfrastructure is allocated 15% of the resources, reflecting the government's efforts to improve the country's infrastructure, including transportation, energy, and communication systems. Security is allocated 10%, emphasizing the government's commitment to maintaining a safe and secure environment for its citizens.\n\nLastly, Transparency is allocated 5% of the resources, demonstrating the government's commitment to promoting transparency and accountability in its operations. Overall, the Government and Public Policy Overview for 2023 provides a clear picture of the government's priorities and initiatives in various sectors, aimed at improving the lives of its citizens and fostering sustainable development.</s>",
    "summarization_pred": "Based on the chart image provided, the key insights are as follows:\n\n* Education receives the highest allocation of 25% of the total budget, followed by Social Welfare at 15%, Infrastructure at 15%, Security at 10%, and Transparency at 5%.\n* The ratios indicate the percentage of the total budget allocated to each sector.\n* The title of the chart is \"Government and Public Policy Overview - 2023\" and it is represented as a ring chart.\n* The ring chart is a circular chart that is divided into sections, with each section representing a different sector.\n* The sections are labeled with the sector names and the corresponding percentage of the budget allocated to each sector.\n* The chart provides a visual representation of the government's priorities and allocation of resources in the areas of education, social welfare, infrastructure, security, and transparency.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, you can use the Matplotlib library. Here is an example of how you can modify the input data to create a pie chart:\n```python\nimport matplotlib.pyplot as plt\n\n# Input data\ndata = [('Education', 0.25), ('Social Welfare', 0.15), ('Infrastructure', 0.15), ('Security', 0.1), ('Transparency', 0.05)]\n\n# Create a pie chart\nfig, ax = plt.subplots()\nax.pie(data, labels=data[1], autopct='%1.1f%%', startangle=90)\n\n# Set chart title and axis labels\nax.set_title('Government and Public Policy Overview - 2023')\nax.set_xlabel('Policy Area')\nax.set_ylabel('Ratio (%)')\n\n# Show the chart\nplt.show()\n```\nThis code will create a pie chart with the given data, and display it on the screen. You can modify the data and the chart properties as needed.</s>",
    "QA": {
      "question": "What sector has the least ratio according to the Government and Public Policy Overview for 2023?",
      "answer_gt": "Transparency",
      "answer_pred": "The sector with the least ratio according to the Government and Public Policy Overview for 2023 is Infrastructure, with a ratio of 15%.</s>"
    }
  },
  {
    "imgname": "rose_272",
    "title_gt": " Number of Scientists and Engineers in Different Fields",
    "title_pred": " Number of Scientists and Engineers in Different Fields ",
    "type_gt": "rose",
    "type_pred": "rose",
    "csv_gt": "Field \\t Value \\n Physics \\t 780 \\n Chemistry \\t 470 \\n Engineering \\t 1020 \\n Computer Science \\t 320 \\n Mathematics \\t 590 \\n Astronomy \\t 120 \\n Geology \\t 230 \\n Robotics \\t 220 \\n Nanotechnology \\t 130 \\n ",
    "csv_pred": "Field \\t Value \\n Physics \\t 200 \\n Chemistry \\t 400 \\n Engineering \\t 250 \\n Computer Science \\t 100 \\n Mathematics \\t 150 \\n Astronomy \\t 100 \\n Geology \\t 50 \\n Robotics \\t 200 \\n Nanotechnology \\t 100 \\n ",
    "description_pred": "The chart shows the number of scientists and engineers in different fields. Physics has the highest number of scientists and engineers with 200, followed by Engineering with 250. Chemistry has the lowest number of scientists and engineers with 400. Mathematics has 150 scientists and engineers, while Astronomy has 100. Geology has 50 scientists and engineers, and Robotics has 200. Nanotechnology has 100 scientists and engineers. Overall, the chart indicates that there is a higher demand for scientists and engineers in the fields of Physics, Engineering, and Robotics.</s>",
    "summarization_pred": "The chart shows the number of scientists and engineers in different fields. It indicates that there are more scientists and engineers in Physics, Chemistry, and Engineering compared to other fields. Computer Science and Mathematics have a similar number of scientists and engineers, while Astronomy and Geology have fewer. Robotics and Nanotechnology have the least number of scientists and engineers. Overall, the chart suggests that Physics, Chemistry, and Engineering are the most popular fields in terms of the number of scientists and engineers.</s>",
    "redrawing_code_pred": "Here is the Python code to redraw the chart image based on the input provided:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [\n    (Physics, 200),\n    (Chemistry, 400),\n    (Engineering, 250),\n    (Computer Science, 100),\n    (Mathematics, 150),\n    (Astronomy, 100),\n    (Geology, 50),\n    (Robotics, 200),\n    (Nanotechnology, 100)\n]\n\n# Define the title\ntitle = \"Number of Scientists and Engineers in Different Fields\"\n\n# Define the type of plot\ntype = \"rose\"\n\n# Create the plot\nplt.bar(data, title=title, color=plt.cm.rainbow(type))\nplt.title(title)\nplt.xlabel(\"Field\")\nplt.ylabel(\"Number of Scientists and Engineers\")\nplt.xticks(rotation=45)\nplt.show()\n```\nThis code will create a bar chart with the title \"Number of Scientists and Engineers in Different Fields\" and the fields listed in the input data. The color of the bars will be determined by the type of plot specified in the input.</s>",
    "QA": {
      "question": "What is the value for Engineering?",
      "answer_gt": "1020",
      "answer_pred": "The value for Engineering is 250.</s>"
    }
  },
  {
    "imgname": "rose_252",
    "title_gt": " Number of Products Sold in E-commerce Stores in 2021",
    "title_pred": " Number of Products Sold in E-commerce Stores in 2021 ",
    "type_gt": "rose",
    "type_pred": "rose",
    "csv_gt": "Category \\t Value \\n Clothing \\t 83 \\n Electronics \\t 150 \\n Groceries \\t 200 \\n Home and Garden \\t 50 \\n Shoes and Accessories \\t 30 \\n Beauty and Cosmetics \\t 25 \\n Toys and Games \\t 40 \\n Sports and Outdoors \\t 20 \\n ",
    "csv_pred": "Category \\t Value \\n Clothing \\t 175 \\n Electronics \\t 150 \\n Groceries \\t 150 \\n Home and Garden \\t 175 \\n Shoes and Accessories \\t 180 \\n Beauty and Cosmetics \\t 150 \\n Toys and Games \\t 100 \\n Sports and Outdoors \\t 150 \\n ",
    "description_pred": "The chart shows the number of products sold in e-commerce stores in 2021, broken down by category. According to the data, the Clothing category had the highest number of products sold, with a value of 175. The Electronics category came in second, with a value of 150, followed by Groceries with a value of 150. The Home and Garden category had a value of 175, while Shoes and Accessories had a value of 180. The Beauty and Cosmetics category had a value of 150, while Toys and Games had a value of 100. Finally, the Sports and Outdoors category had a value of 150. Overall, the chart shows a rise in the number of products sold in e-commerce stores in 2021, with some categories experiencing a higher increase than others.</s>",
    "summarization_pred": "Based on the chart image, it can be observed that the number of products sold in e-commerce stores in 2021 varied across different categories. Clothing had the highest number of products sold with 175, followed by Electronics with 150, Groceries with 150, Home and Garden with 175, Shoes and Accessories with 180, Beauty and Cosmetics with 150, Toys and Games with 100, and Sports and Outdoors with 150. It is worth noting that the category with the highest number of products sold was not necessarily the one with the highest value.</s>",
    "redrawing_code_pred": "Here is the Python code to redraw the chart image based on the input provided:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [\n    ('Clothing', 175),\n    ('Electronics', 150),\n    ('Groceries', 150),\n    ('Home and Garden', 175),\n    ('Shoes and Accessories', 180),\n    ('Beauty and Cosmetics', 150),\n    ('Toys and Games', 100),\n    ('Sports and Outdoors', 150)\n]\n\n# Define the title and type of the chart\ntitle = 'Number of Products Sold in E-commerce Stores in 2021'\ntype = 'rose'\n\n# Create the chart\nplt.bar(data, title=title, color=type)\nplt.title(title)\nplt.xlabel('Category')\nplt.ylabel('Number of Products Sold')\n\n# Show the chart\nplt.show()\n```\nThis code will create a bar chart with the data provided in the input, using the title and type specified. The chart will be displayed using the `show()` method of the `pyplot` module in Matplotlib.</s>",
    "QA": {
      "question": "How many more products were sold in the \"Electronics\" category compared to the \"Beauty and Cosmetics\" category?",
      "answer_gt": "125 products",
      "answer_pred": "The answer to the question \"How many more products were sold in the 'Electronics' category compared to the 'Beauty and Cosmetics' category?\" is 25.</s>"
    }
  },
  {
    "imgname": "area_chart_263",
    "title_gt": " Arts and Culture Industry Distributio",
    "title_pred": " Arts and Culture Industry Distribution ",
    "type_gt": "area_chart",
    "type_pred": "area_chart",
    "csv_gt": "Category \\t Artists \\t Performers \\t Museums \\t Galleries \\t Venues \\n Music \\t 100 \\t 150 \\t 50 \\t 75 \\t 200 \\n Visual Arts \\t 150 \\t 100 \\t 100 \\t 50 \\t 200 \\n Theater \\t 100 \\t 200 \\t 50 \\t 100 \\t 150 \\n Dance \\t 75 \\t 150 \\t 25 \\t 50 \\t 100 \\n Literature \\t 50 \\t 75 \\t 25 \\t 25 \\t 50 \\n Film \\t 25 \\t 50 \\t 100 \\t 75 \\t 100 \\n ",
    "csv_pred": "Music Category \\t Artists \\t Performers \\t Category \\t Dance \\t Literature \\t Film \\n Music \\t 100 \\t 150 \\t 250 \\t 300 \\t 150 \\t 200 \\n Visual Arts \\t 200 \\t 250 \\t 300 \\t 250 \\t 100 \\t 150 \\n Theater \\t 100 \\t 200 \\t 450 \\t 350 \\t 100 \\t 250 \\n Dance \\t 80 \\t 100 \\t 300 \\t 200 \\t 150 \\t 200 \\n Literature \\t 50 \\t 20 \\t 150 \\t 100 \\t 100 \\t 250 \\n Film \\t 30 \\t 15 \\t 200 \\t 150 \\t 100 \\t 150 \\n ",
    "description_pred": "The Arts and Culture Industry Distribution chart shows the distribution of various forms of art and culture across different categories. The x-axis represents the different categories, while the y-axis represents the number of artists or performers in each category. The chart is divided into several sections, each representing a different form of art or culture. The Music category has the highest number of artists and performers, with 100 in the Music, Performers category and 250 in the Music, Category category. The Performers category has the highest number of performers, with 150 in the Music, Performers category and 200 in the Visual Arts, Performers category. The Dance category has the highest number of artists, with 300 in the Music, Dance category and 250 in the Visual Arts, Dance category. The Literature category has the highest number of literature works, with 150 in the Music, Literature category and 100 in the Visual Arts, Literature category. The Film category has the highest number of film works, with 200 in the Music, Film category and 150 in the Visual Arts, Film category. The Theater category has the highest number of performers, with 450 in the Theater, Performers category and 350 in the Theater, Dance category. The Dance category has the highest number of dance works, with 300 in the Visual Arts, Dance category and 200 in the Dance, Dance category. The Literature category has the highest number of literature works, with 100 in the Literature, Literature category and 100 in the Literature, Film category. The Film category has the highest number of film works, with 250 in the Literature, Film category and 200 in the Film, Film category.</s>",
    "summarization_pred": "The chart shows the distribution of the Arts and Culture Industry across different categories such as Music, Performers, Category, Dance, Literature, Film, Theater, and Visual Arts. The x-axis represents the different categories while the y-axis represents the number of artists or performers in each category. The chart shows that the Music category has the highest number of artists with 100, followed by Performers with 150, and Category with 250. The Dance category has the highest number of performers with 300, followed by Literature with 150 and Film with 200. The Theater category has the highest number of artists with 450, followed by Literature with 100 and Film with 250. The Visual Arts category has the highest number of performers with 250, followed by Dance with 200 and Literature with 100. The Film category has the highest number of artists with 30, followed by Performers with 15 and Category with 200.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, we can use the Matplotlib library. Here is an example code that can be used to create the chart:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [\n    ('Music', 100),\n    ('Artists', 150),\n    ('Music', 250),\n    ('Performers', 300),\n    ('Literature', 150),\n    ('Film', 200),\n    ('Visual Arts', 200),\n    ('Performers', 250),\n    ('Visual Arts', 300),\n    ('Dance', 250),\n    ('Literature', 100),\n    ('Film', 150),\n    ('Theater', 450),\n    ('Dance', 350),\n    ('Literature', 100),\n    ('Film', 250),\n    ('Dance', 200),\n    ('Literature', 150),\n    ('Film', 200),\n    ('Dance', 300),\n    ('Literature', 100),\n    ('Film', 250),\n    ('Literature', 100),\n    ('Film', 150),\n    ('Dance', 100),\n    ('Literature', 100),\n    ('Film', 250),\n    ('Film', 150)\n]\n\n# Create the chart\nfig, ax = plt.subplots()\nax.pie(data, labels=data[1:], autopct='%1.1f%%', startangle=90)\nax.set_title('Arts and Culture Industry Distribution')\nax.axis('equal')\n\n# Show the chart\nplt.show()\n```\nThis code creates a pie chart using the data provided in the input. The chart is created using the `pie()` function of Matplotlib, which takes the data and labels as arguments. The `autopct` parameter is used to format the percentages in the chart, and the `startangle` parameter is used to",
    "QA": {
      "question": "How many artists are associated with the Visual Arts category?",
      "answer_gt": "150",
      "answer_pred": "\nThe Visual Arts category is associated with 200 artists.</s>"
    }
  },
  {
    "imgname": "area_chart_275",
    "title_gt": " Visitor Trends in Arts and Culture Events by Month",
    "title_pred": " Visitor Trends in Arts and Culture Events by Month ",
    "type_gt": "area_chart",
    "type_pred": "area_chart",
    "csv_gt": "Month \\t Art Galleries (Visitors) \\t Museums (Visitors) \\t Music Events (Attendees) \\t Theater Shows (Attendees) \\t Festivals (Attendees) \\n Jan \\t 5000 \\t 3000 \\t 2000 \\t 4000 \\t 1000 \\n Feb \\t 5500 \\t 3500 \\t 2500 \\t 4500 \\t 1200 \\n Mar \\t 6000 \\t 4000 \\t 3000 \\t 5000 \\t 1500 \\n Apr \\t 6500 \\t 4500 \\t 3500 \\t 5500 \\t 1800 \\n May \\t 7000 \\t 5000 \\t 4000 \\t 6000 \\t 2000 \\n Jun \\t 7500 \\t 5500 \\t 4500 \\t 6500 \\t 2200 \\n Jul \\t 8000 \\t 6000 \\t 5000 \\t 7000 \\t 2500 \\n Aug \\t 8500 \\t 6500 \\t 5500 \\t 7500 \\t 2700 \\n Sep \\t 9000 \\t 7000 \\t 6000 \\t 8000 \\t 3000 \\n Oct \\t 9500 \\t 7500 \\t 6500 \\t 8500 \\t 3300 \\n Nov \\t 10000 \\t 8000 \\t 7000 \\t 9000 \\t 3500 \\n Dec \\t 10500 \\t 8500 \\t 7500 \\t 9500 \\t 3800 \\n ",
    "csv_pred": "Month \\t Art Galleries (Visitors) \\t Museums (Visitors) \\t Music Events (Attendees) \\t Theater Shows (Attendees) \\t Festivals (Attendees) \\n Jan \\t 3980 \\t 7960 \\t 11940 \\t 15920 \\t 15800 \\n Feb \\t 3980 \\t 7950 \\t 11100 \\t 15950 \\t 16000 \\n Mar \\t 3980 \\t 7900 \\t 11100 \\t 16200 \\t 17000 \\n Apr \\t 3950 \\t 7900 \\t 11500 \\t 16500 \\t 18000 \\n May \\t 3900 \\t 7900 \\t 11900 \\t 17000 \\t 20000 \\n Jun \\t 3900 \\t 7900 \\t 11900 \\t 17500 \\t 21000 \\n Jul \\t 3900 \\t 7950 \\t 11500 \\t 18000 \\t 22000 \\n Aug \\t 3950 \\t 7900 \\t 11700 \\t 18500 \\t 23000 \\n Sep \\t 3900 \\t 7950 \\t 11800 \\t 18700 \\t 23000 \\n Oct \\t 3950 \\t 7900 \\t 11900 \\t 18800 \\t 24000 \\n Nov \\t 3900 \\t 7950 \\t 11900 \\t 18800 \\t 25000 \\n Dec \\t 3950 \\t 7900 \\t 11900 \\t 18800 \\t 26000 \\n ",
    "description_pred": "\nThe chart shows the number of visitors and attendees for various arts and culture events in a particular city throughout the year. In January, the highest number of visitors can be seen for music events and theater shows, with 11,940 and 15,920 attendees respectively. The number of visitors for art galleries and festivals is relatively low in January, with 3,980 and 15,800 visitors respectively. As the year progresses, the number of visitors for art galleries and museums increases, while the number of visitors for music events and theater shows decreases. In December, the number of visitors for festivals is the highest, with 26,000 attendees. Overall, the chart shows a trend of increasing visitor numbers for art galleries and museums and decreasing visitor numbers for music events and theater shows as the year progresses.</s>",
    "summarization_pred": "The chart shows the number of visitors and attendees for various arts and culture events in a given month. The data is presented in a bar chart format with the x-axis representing the month and the y-axis representing the number of visitors or attendees. The chart shows that the number of visitors and attendees varies throughout the year, with the highest numbers occurring in the summer months and the lowest numbers occurring in the winter months. For example, in January, the number of visitors to art galleries is 3,980, while the number of visitors to museums is 7,960. In February, the number of visitors to art galleries remains the same, while the number of visitors to museums decreases to 7,950. Similarly, the number of attendees for music events and theater shows also varies throughout the year, with the highest numbers occurring in the summer months and the lowest numbers occurring in the winter months. Overall, the chart shows a clear seasonal trend in visitor and attendee numbers for arts and culture events.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, you can use the Matplotlib library. Here is an example code that you can modify to fit your specific needs:\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\ndata = [\n    (Jan, 'Art Galleries (Visitors)', 3980),\n    (Jan, 'Museums (Visitors)', 7960),\n    (Jan, 'Music Events (Attendees)', 11940),\n    (Jan, 'Theater Shows (Attendees)', 15920),\n    (Jan, 'Festivals (Attendees)', 15800),\n    (Feb, 'Art Galleries (Visitors)', 3980),\n    (Feb, 'Museums (Visitors)', 7950),\n    (Feb, 'Music Events (Attendees)', 11100),\n    (Feb, 'Theater Shows (Attendees)', 15950),\n    (Feb, 'Festivals (Attendees)', 16000),\n    (Mar, 'Art Galleries (Visitors)', 3980),\n    (Mar, 'Museums (Visitors)', 7900),\n    (Mar, 'Music Events (Attendees)', 11100),\n    (Mar, 'Theater Shows (Attendees)', 16200),\n    (Mar, 'Festivals (Attendees)', 17000),\n    (Apr, 'Art Galleries (Visitors)', 3950),\n    (Apr, 'Museums (Visitors)', 7900),\n    (Apr, 'Music Events (Attendees)', 11500),\n    (Apr, 'Theater Shows (Attendees)', 16500),\n    (Apr, 'Festivals (Attendees)', 18000),\n    (May, 'Art Galleries (Visitors)', ",
    "QA": {
      "question": "Which month has the highest total number of visitors for art galleries, museums, music events, theater shows, and festivals combined?",
      "answer_gt": "December",
      "answer_pred": "\nThe month with the highest total number of visitors for art galleries, museums, music events, theater shows, and festivals combined is December.</s>"
    }
  },
  {
    "imgname": "heatmap_117",
    "title_gt": " Nonprofit Organization Performance Metrics",
    "title_pred": " Nonprofit Organization Performance Metrics ",
    "type_gt": "heatmap",
    "type_pred": "heatmap",
    "csv_gt": "Category \\t Donation Amount ($) \\t Donation Percentage (%) \\t Fundraising Expenses (%) \\t Charity Rating (out of 5) \\t Volunteer Participation (%) \\n Animal Welfare \\t 100 \\t 10% \\t 20% \\t 4.5 \\t 50% \\n Education \\t 200 \\t 20% \\t 25% \\t 4.2 \\t 60% \\n Health \\t 300 \\t 30% \\t 30% \\t 4.0 \\t 70% \\n Disaster Relief \\t 400 \\t 40% \\t 35% \\t 3.8 \\t 80% \\n Environmental \\t 500 \\t 50% \\t 40% \\t 3.5 \\t 90% \\n Poverty Alleviation \\t 600 \\t 60% \\t 45% \\t 3.2 \\t 95% \\n ",
    "csv_pred": "Category \\t Donation Amount ($) \\t Fundraising Expenses ($) \\t Charity Rating (out of 5) \\t Volunteer Participation (%) \\n Animal Welfare \\t 100 \\t 20 \\t 50 \\t 25 \\n Education \\t 200 \\t 25 \\t 42 \\t 60 \\n Health \\t 300 \\t 30 \\t 40 \\t 70 \\n Disaster Relief \\t 400 \\t 35 \\t 38 \\t 80 \\n Environmental \\t 500 \\t 50 \\t 40 \\t 90 \\n Poverty All \\t 600 \\t 60 \\t 45 \\t 32 \\n ",
    "description_pred": "This heatmap provides a visual representation of the performance metrics for various nonprofit organizations across different categories. The categories include Animal Welfare, Education, Health, Disaster Relief, and Environmental, as well as a catch-all category for Poverty All. Each category is represented by a different color, with the legend provided in the top right corner of the chart.\n\nThe chart shows the donation amount, fundraising expenses, charity rating, volunteer participation, and other relevant metrics for each category. For example, in the Animal Welfare category, the donation amount is $100, fundraising expenses are $20, charity rating is 50 out of 5, volunteer participation is 25%, and the overall performance is rated as good.\n\nSimilarly, in the Education category, the donation amount is $200, fundraising expenses are $25, charity rating is 42 out of 5, volunteer participation is 60%, and the overall performance is rated as excellent.\n\nThe chart provides a clear and concise way to compare the performance of different nonprofit organizations across various categories. It allows stakeholders to make informed decisions about where to allocate their resources and support.</s>",
    "summarization_pred": "The chart provided shows the performance metrics of various nonprofit organizations across different categories such as Animal Welfare, Education, Health, Disaster Relief, Environmental, and Poverty Alleviation. The metrics include donation amount, fundraising expenses, charity rating, volunteer participation, and other relevant data points.\n\nFrom the chart, we can observe that Animal Welfare has the highest charity rating among all categories, with a rating of 50 out of 5. However, it also has the highest fundraising expenses compared to other categories. On the other hand, Poverty Alleviation has the lowest charity rating, but it also has the lowest fundraising expenses.\n\nIn terms of volunteer participation, Education has the highest percentage of volunteer participation, with 60% of its donations coming from volunteers. Health follows closely behind with 70% volunteer participation, while Disaster Relief has the highest percentage of volunteer participation among all categories, with 80% of its donations coming from volunteers.\n\nOverall, the chart provides a comprehensive overview of the performance metrics of various nonprofit organizations across different categories, allowing us to compare and analyze their effectiveness in achieving their goals.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, we can use the Matplotlib library. Here is an example code that can be used to create a heatmap of the given data:\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\ndata = [\n    (\"Animal Welfare\", 100),\n    (\"Animal Welfare\", 20),\n    (\"Animal Welfare\", 50),\n    (\"Animal Welfare\", 25),\n    (\"Education\", 200),\n    (\"Education\", 25),\n    (\"Education\", 42),\n    (\"Education\", 60),\n    (\"Health\", 300),\n    (\"Health\", 30),\n    (\"Health\", 40),\n    (\"Health\", 70),\n    (\"Disaster Relief\", 400),\n    (\"Disaster Relief\", 35),\n    (\"Disaster Relief\", 38),\n    (\"Disaster Relief\", 80),\n    (\"Environmental\", 500),\n    (\"Environmental\", 50),\n    (\"Environmental\", 40),\n    (\"Environmental\", 90),\n    (\"Poverty All\", 600),\n    (\"Poverty All\", 60),\n    (\"Poverty All\", 45),\n    (\"Poverty All\", 32)\n]\n\n# Define the colors for each category\ncolors = [\"#FFC107\", \"#FFA500\", \"#FFC107\", \"#FFA500\", \"#FFC107\", \"#FFA500\", \"#FFC107\", \"#FFA500\", \"#FFC107\", \"#FFA500\", \"#FFC107\", \"#FFA500\", \"#FFC107\", \"#FFA500\", \"#FFC107\", \"#FFA500\", \"#FFC107\", \"#FFA500\", \"#FFC107\", \"#FFA500\", \"#FFC107\", \"#FFA500\", \"#FFC107",
    "QA": {
      "question": "What is the Volunteer Participation percentage for Education category?",
      "answer_gt": "60%",
      "answer_pred": "The Volunteer Participation percentage for the Education category is 60%.</s>"
    }
  },
  {
    "imgname": "heatmap_11",
    "title_gt": " Scientific Fields and Their Involvement in Various Areas",
    "title_pred": " Scientific Fields and Their Involvement in Various Areas ",
    "type_gt": "heatmap",
    "type_pred": "heatmap",
    "csv_gt": "Field \\t Engineering \\t Chemistry \\t Biology \\t Physics \\t Computer Science \\t Mathematics \\n Research \\t 20 \\t 10 \\t 15 \\t 30 \\t 25 \\t 12 \\n Education \\t 30 \\t 25 \\t 15 \\t 10 \\t 20 \\t 30 \\n Industry \\t 35 \\t 30 \\t 15 \\t 20 \\t 25 \\t 28 \\n Government \\t 15 \\t 35 \\t 25 \\t 20 \\t 30 \\t 30 \\n ",
    "csv_pred": "Areas \\t Scientific Fields \\t Their Involvement \\n Engineering \\t 25 \\t 20 \\n Chemistry \\t 20 \\t 25 \\n Biology \\t 15 \\t 20 \\n Physics \\t 20 \\t 30 \\n Computer Science \\t 15 \\t 35 \\n Mathematics \\t 10 \\t 35 \\n ",
    "description_pred": "The heatmap provided shows the involvement of various scientific fields in different areas. The x-axis represents the scientific fields, and the y-axis represents the areas they are involved in. The color intensity on the heatmap indicates the level of involvement of each scientific field in each area.\n\nAccording to the chart, Engineering has the highest involvement in various areas, with a score of 25 in the Scientific Fields category and 20 in their involvement in different areas. Chemistry has a score of 20 in the Scientific Fields category and 25 in their involvement in different areas. Biology has a score of 15 in the Scientific Fields category and 20 in their involvement in different areas. Physics has a score of 20 in the Scientific Fields category and 30 in their involvement in different areas. Computer Science has a score of 15 in the Scientific Fields category and 35 in their involvement in different areas. Mathematics has a score of 10 in the Scientific Fields category and 35 in their involvement in different areas.\n\nOverall, the heatmap provides a clear picture of the involvement of different scientific fields in various areas. It shows that Engineering and Computer Science have the highest involvement in different areas, while Chemistry and Mathematics have the highest involvement in their respective scientific fields. Biology and Physics have moderate involvement in their fields, while Mathematics has the least involvement in the Scientific Fields category.</s>",
    "summarization_pred": "The heatmap provided shows the involvement of different scientific fields in various areas. The x-axis represents the scientific fields, and the y-axis represents the areas they are involved in. The color intensity indicates the level of involvement.\n\nEngineering is involved in 25 areas, with their involvement ranging from 15 to 30. Chemistry is involved in 20 areas, with their involvement ranging from 15 to 25. Biology is involved in 15 areas, with their involvement ranging from 10 to 20. Physics is involved in 20 areas, with their involvement ranging from 20 to 30. Computer Science is involved in 15 areas, with their involvement ranging from 10 to 35. Mathematics is involved in 10 areas, with their involvement ranging from 10 to 35.\n\nOverall, it can be seen that Engineering and Computer Science are involved in the most areas, while Mathematics is involved in the least number of areas. Chemistry and Physics are involved in a moderate number of areas, while Biology is involved in fewer areas.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, you can use the Matplotlib library. Here is an example of how you can create a heatmap of the data provided:\n```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\ndata = [(25, 20, 20, 15, 20, 30, 15, 20, 20, 35, 10, 35),\n        (25, 20, 20, 15, 20, 30, 15, 20, 20, 35, 10, 35),\n        (25, 20, 20, 15, 20, 30, 15, 20, 20, 35, 10, 35),\n        (20, 20, 25, 20, 25, 30, 20, 25, 25, 35, 15, 35),\n        (20, 20, 25, 20, 25, 30, 20, 25, 25, 35, 15, 35),\n        (20, 20, 25, 20, 25, 30, 20, 25, 25, 35, 15, 35),\n        (20, 20, 25, 20, 25, 30, 20, 25, 25, 35, 15, 35),\n        (20, 20, 25, 20, 25, 30, 20, 25, 25, 35, 15, 35),\n        (20, 20, 25, 20, 25, 30, 20, 25, 25, 35, 15, 35),\n        (2",
    "QA": {
      "question": "Which sector has the highest involvement in Physics?",
      "answer_gt": "Research",
      "answer_pred": "Physics has the highest involvement among the given sectors.</s>"
    }
  },
  {
    "imgname": "3D-Bar_145",
    "title_gt": " Student and Research Project Distribution in Science and Engineering Departments",
    "title_pred": " Student and Research Project Distribution in Science and Engineering Departments ",
    "type_gt": "3D-Bar",
    "type_pred": "3D-Bar",
    "csv_gt": "Department \\t Number of Undergraduate Students \\t Number of Postgraduate Students \\t Number of Research Projects \\n Computer Science \\t 650 \\t 300 \\t 55 \\n Civil Engineering \\t 400 \\t 200 \\t 35 \\n Mechanical Engineering \\t 700 \\t 300 \\t 70 \\n Electrical Engineering \\t 500 \\t 180 \\t 40 \\n Bioengineering \\t 450 \\t 250 \\t 60 \\n ",
    "csv_pred": "Engineering Department \\t Number of Postgraduate Students \\t Number of Undergraduate Students \\n Bioengineering \\t 300 \\t 700 \\n Electrical Engineering \\t 200 \\t 600 \\n Civil Engineering \\t 100 \\t 500 \\n Computer Science \\t 50 \\t 300 \\n ",
    "description_pred": "The chart provided shows the distribution of students in various science and engineering departments. The x-axis represents the different departments, while the y-axis indicates the number of students. The bars in the chart are divided into two sections, one for postgraduate students and the other for undergraduate students.\n\nIn the department of Bioengineering, there are 300 postgraduate students and 700 undergraduate students. In Electrical Engineering, there are 200 postgraduate students and 600 undergraduate students. In Civil Engineering, there are 100 postgraduate students and 500 undergraduate students. In Computer Science, there are 50 postgraduate students and 300 undergraduate students.\n\nOverall, the chart shows that the departments of Bioengineering and Electrical Engineering have a higher number of postgraduate students, while Civil Engineering has a higher number of undergraduate students. Computer Science has a balanced number of both postgraduate and undergraduate students.</s>",
    "summarization_pred": "The chart shows the distribution of students and research projects in various science and engineering departments. The x-axis represents the departments, while the y-axis represents the number of students and research projects. The data is presented in a 3D-bar format, with the height of each bar representing the number of students or research projects, and the color indicating the department.\n\nFrom the chart, we can see that Bioengineering has the highest number of postgraduate students, with 300, followed by Electrical Engineering with 200. Civil Engineering has the highest number of undergraduate students, with 500, followed by Computer Science with 300.\n\nIt is worth noting that the number of postgraduate students in Electrical Engineering is significantly lower than the number of undergraduate students, while the opposite is true for Civil Engineering. This may indicate differences in the focus of the departments or the interests of the students.\n\nOverall, the chart provides a useful overview of the distribution of students and research projects in various science and engineering departments.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, you can use the Matplotlib library. Here is an example of how you can create a 3D bar chart with the data provided:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [\n    ('Bioengineering', 300),\n    ('Bioengineering', 700),\n    ('Electrical Engineering', 200),\n    ('Electrical Engineering', 600),\n    ('Civil Engineering', 100),\n    ('Civil Engineering', 500),\n    ('Computer Science', 50),\n    ('Computer Science', 300)\n]\n\n# Create the chart\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\n\n# Plot the bars\nfor label, value in data:\n    ax.bar(label, value, color='b')\n\n# Set the title and axis labels\nax.set_title('Student and Research Project Distribution in Science and Engineering Departments')\nax.set_xlabel('Department')\nax.set_ylabel('Number of Students')\n\n# Show the chart\nplt.show()\n```\nThis code will create a 3D bar chart with the data provided, and display it in a Jupyter notebook or Python environment.</s>",
    "QA": {
      "question": "How many more research projects does Mechanical Engineering have compared to Civil Engineering?",
      "answer_gt": "35",
      "answer_pred": "Mechanical Engineering has 300 more research projects than Civil Engineering.</s>"
    }
  },
  {
    "imgname": "3D-Bar_83",
    "title_gt": " Law and Legal Affairs - An Analysis of Regional Variability",
    "title_pred": " Law and Legal Affairs - An Analysis of Regional Variability ",
    "type_gt": "3D-Bar",
    "type_pred": "3D-Bar",
    "csv_gt": "Region \\t Number of Law Firms \\t Average Cost per Hour (USD) \\t Number of Cases \\n North \\t 400 \\t 150 \\t 250 \\n South \\t 500 \\t 120 \\t 300 \\n East \\t 600 \\t 140 \\t 350 \\n West \\t 700 \\t 160 \\t 400 \\n ",
    "csv_pred": "Characteristic \\t Number of Law Firms \\t Average Cost per Hour (USD) \\n North \\t 500 \\t 600 \\n South \\t 400 \\t 650 \\n East \\t 300 \\t 700 \\n West \\t 200 \\t 800 \\n Average Cost per Hour (USD) \\t 100 \\t 120 \\n ",
    "description_pred": "The Law and Legal Affairs - An Analysis of Regional Variability chart displays data on the number of law firms and the average cost per hour in different regions. The chart is presented in a 3D-Bar format, with the x-axis representing the regions (North, South, East, and West), and the y-axis representing the number of law firms and the average cost per hour. The data points are color-coded to represent the specific regions, and the title of the chart is \"Law and Legal Affairs - An Analysis of Regional Variability.\" The chart provides a visual representation of the differences in the number of law firms and the average cost per hour across different regions.</s>",
    "summarization_pred": "The chart provided shows an analysis of regional variability in Law and Legal Affairs. The x-axis represents the regions, while the y-axis represents the number of law firms and the average cost per hour (USD), respectively. The chart is a 3D-Bar chart, which means that each bar is divided into three segments, representing the average cost per hour for each region.\n\nAccording to the chart, the North region has the highest number of law firms, with an average cost per hour of $600. The South region has the second-highest number of law firms, with an average cost per hour of $650. The East region has the third-highest number of law firms, with an average cost per hour of $700. The West region has the lowest number of law firms, with an average cost per hour of $800.\n\nWhen we look at the average cost per hour for each region, we can see that the North region has the lowest average cost per hour, at $120. The South region has an average cost per hour of $150, the East region has an average cost per hour of $150, and the West region has the highest average cost per hour, at $180.\n\nIn summary, the chart shows that there is regional variability in the number of law firms and the average cost per hour in the Law and Legal Affairs sector. The North region has the highest number of law firms and the lowest average cost per hour, while the West region has the lowest number of law firms and the highest average cost per hour.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, you can use the Matplotlib library. Here is an example code that you can modify to fit your needs:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [\n    (North, 500, 600),\n    (North, 400, 650),\n    (South, 300, 700),\n    (South, 200, 800),\n    (East, 100, 120),\n    (East, 200, 120),\n    (West, 300, 120),\n    (West, 400, 120),\n    (Average Cost per Hour (USD), 500, 600),\n    (Average Cost per Hour (USD), 400, 650),\n    (Average Cost per Hour (USD), 300, 700),\n    (Average Cost per Hour (USD), 200, 800),\n    (Average Cost per Hour (USD), 100, 120),\n    (Average Cost per Hour (USD), 200, 120),\n    (Average Cost per Hour (USD), 300, 120),\n    (Average Cost per Hour (USD), 400, 120),\n]\n\n# Define the title and type of the chart\ntitle = \"Law and Legal Affairs - An Analysis of Regional Variability\"\ntype = \"3D-Bar\"\n\n# Create the chart\nfig, ax = plt.subplots()\nax.bar(data, color='blue', width=0.8)\nax.set_title(title, fontsize=16)\nax.set_xlabel(\"Region\", fontsize=12)\nax.set_ylabel(\"Number of Law Firms\", fontsize=12)\nax.set_xticks(range(len(data)))\nax.set_xticklabels(data[",
    "QA": {
      "question": "Which region has the highest number of law firms and the highest average cost per hour?",
      "answer_gt": "West",
      "answer_pred": "The region with the highest number of law firms and the highest average cost per hour is the West.</s>"
    }
  },
  {
    "imgname": "box_69",
    "title_gt": " Price Distribution of Selected Food and Beverage Products (2022)",
    "title_pred": " Price Distribution of Selected Food and Beverage Products (2022) ",
    "type_gt": "box",
    "type_pred": "box",
    "csv_gt": "Product \\t Min \\t Q1 \\t Median \\t Q3 \\t Max \\t Outlier \\n Whole Grain Bread \\t 3 \\t 3.5 \\t 4 \\t 4.5 \\t 5 \\t [] \\n Red Wine \\t 15 \\t 20 \\t 25 \\t 30 \\t 35 \\t [45;50] \\n White Meat \\t 5 \\t 7 \\t 9 \\t 11 \\t 15 \\t [] \\n Blue Cheese \\t 6 \\t 7.5 \\t 9 \\t 10.5 \\t 12 \\t [15] \\n Organic Apples \\t 2 \\t 2.5 \\t 3 \\t 4 \\t 5 \\t [10] \\n ",
    "csv_pred": "Product \\t Min \\t Q1 \\t Median \\t Q3 \\t Max \\t Outlier \\n Whole Grain Bread \\t 2 \\t 3 \\t 4 \\t 4 \\t 5 \\t [] \\n Red Wine \\t 20 \\t 30 \\t 25 \\t 35 \\t 35 \\t [1;45;50] \\n White Meat \\t 7 \\t 11 \\t 10 \\t 15 \\t 15 \\t [1;45;50] \\n Blue Cheese \\t 8 \\t 10 \\t 11 \\t 12 \\t 15 \\t [1;45;50] \\n Organic Apples \\t 3 \\t 4 \\t 4 \\t 4 \\t 5 \\t [50] \\n ",
    "description_pred": "The chart provided shows the price distribution of selected food and beverage products in the year 2022. The products included in the chart are Whole Grain Bread, Red Wine, White Meat, Blue Cheese, and Organic Apples. The chart is a box plot, with the median price of each product indicated by a horizontal line in the middle of the box. The whiskers extend to the minimum and maximum prices, while the outliers are indicated by individual data points outside of the whiskers. The title of the chart is \"Price Distribution of Selected Food and Beverage Products (2022)\", and the type of chart is a box plot.</s>",
    "summarization_pred": "The chart shows the price distribution of selected food and beverage products in 2022. The products included in the chart are Whole Grain Bread, Red Wine, White Meat, Blue Cheese, and Organic Apples. The x-axis represents the price range, while the y-axis represents the quantity sold.\n\nWhole Grain Bread has a minimum price of 2, a first quartile (Q1) of 3, a median of 4, a third quartile (Q3) of 4, a maximum price of 5, and no outliers.\n\nRed Wine has a minimum price of 20, a first quartile (Q1) of 30, a median of 25, a third quartile (Q3) of 35, a maximum price of 35, and one outlier at 45.\n\nWhite Meat has a minimum price of 7, a first quartile (Q1) of 11, a median of 10, a third quartile (Q3) of 15, a maximum price of 15, and one outlier at 45.\n\nBlue Cheese has a minimum price of 8, a first quartile (Q1) of 10, a median of 11, a third quartile (Q3) of 12, a maximum price of 15, and one outlier at 45.\n\nOrganic Apples have a minimum price of 3, a first quartile (Q1) of 4, a median of 4, a third quartile (Q3) of 4, a maximum price of 5, and one outlier at 50.\n\nOverall, the chart provides insight into the price distribution of these selected products, with Red Wine having the highest minimum and maximum prices, and Organic Apples having the lowest minimum and maximum prices.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, we can use the Matplotlib library. Here is an example code that can be used to create a box plot of the given data:\n```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots()\n\n# Plot the box plot\nax.boxplot([[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n            [20, 30, 25, 35, 35, 45, 50, 1, 2, 3, 4],\n            [7, 11, 10, 15, 15, 11, 12, 15, 15, 15, 15],\n            [3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5]],\n            labels=['Min', 'Q1', 'Median', 'Q3', 'Max', 'Outlier 1', 'Outlier 2', 'Outlier 3'],\n            color=['blue', 'red', 'green', 'orange', 'purple', 'yellow', 'cyan', 'magenta', 'cornflowerblue', 'darkorange', 'brown'],\n            flierprops={'marker': 'o', 'markersize': 10, 'markerfacecolor': 'white', 'markershape': 'sphere', 'color': 'white', 'linestyle': '-', 'linewidth': 1, 'alpha': 0.8})\n\n# Set the title and axis labels\nax.set_title('Price Distribution of Selected Food and Beverage Products (2022)')\nax.set_xlabel('Product')\nax.set_ylabel('Price')\n\n# Show the plot\nplt.show()\n```\nThis code will create a box plot of the given data, with the x-axis representing the product and the y-axis representing the price. The box plot will show the minimum, first quartile (Q1), median, third quartile (Q3), and maximum prices for each product,",
    "QA": {
      "question": "What is the range of prices for Whole Grain Bread according to the box plot data?",
      "answer_gt": "$2",
      "answer_pred": "The range of prices for Whole Grain Bread according to the box plot data is [2, 5].</s>"
    }
  },
  {
    "imgname": "box_197",
    "title_gt": " Sustainability Indicators Distribution (2022)",
    "title_pred": " Sustainability Indicators Distribution (2022) ",
    "type_gt": "box",
    "type_pred": "box",
    "csv_gt": "Sustainability Indicator \\t Min \\t Q1 \\t Median \\t Q3 \\t Max \\t Outlier \\n Energy Consumption (KWh) \\t 200 \\t 400 \\t 600 \\t 800 \\t 1000 \\t [] \\n Water Consumption (Gallons) \\t 1000 \\t 2000 \\t 3000 \\t 4000 \\t 5000 \\t [8000] \\n Waste Production (Kg) \\t 100 \\t 200 \\t 300 \\t 400 \\t 500 \\t [25;700] \\n Carbon Footprint (Tons) \\t 10 \\t 20 \\t 30 \\t 40 \\t 50 \\t [75] \\n Renewable Energy Usage (%) \\t 5 \\t 15 \\t 25 \\t 35 \\t 45 \\t [55] \\n ",
    "csv_pred": "Category \\t Values \\n Energy Consumption (kWh) \\t 500 \\n Water Consumption (Gallons) \\t 2000 \\n Waste Production (Kg) \\t 300 \\n Carbon Footprint (Nons) \\t 100 \\n Renewable Energy Usage (%) \\t 50 \\n ",
    "description_pred": "The Sustainability Indicators Distribution chart shows the energy consumption, water consumption, waste production, carbon footprint, and renewable energy usage for the year 2022. The energy consumption is measured in kilowatt hours (kWh) and is shown to be 500. The water consumption is measured in gallons and is shown to be 2000. The waste production is measured in kilograms (Kg) and is shown to be 300. The carbon footprint is measured in non-scientific units (Nons) and is shown to be 100. The renewable energy usage is shown to be 50% of the total energy consumption. The chart is presented in a box format with the title \"Sustainability Indicators Distribution (2022)\" and the type of data is indicated as \"box\".</s>",
    "summarization_pred": "The chart provided shows the distribution of sustainability indicators for the year 2022. Energy consumption stands at 500 kWh, water consumption at 2000 gallons, waste production at 300 kg, carbon footprint at 100 nons, and renewable energy usage at 50%.</s>",
    "redrawing_code_pred": "Here is the Python code to redraw the chart image based on the provided input:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data for the chart\ndata = [\n    ('Energy Consumption (kWh)', 500),\n    ('Water Consumption (Gallons)', 2000),\n    ('Waste Production (Kg)', 300),\n    ('Carbon Footprint (Nons)', 100),\n    ('Renewable Energy Usage (%)', 50)\n]\n\n# Define the title for the chart\ntitle = 'Sustainability Indicators Distribution (2022)'\n\n# Create the box plot using matplotlib\nfig, ax = plt.subplots()\nax.boxplot(data, labels=data[1], vert=False)\n\n# Set the title and axis labels\nax.set_title(title)\nax.set_xlabel('Indicator')\nax.set_ylabel('Value')\n\n# Show the plot\nplt.show()\n```\nThis code will create a box plot of the sustainability indicators with the specified data and labels. The resulting plot will be displayed using the `plt.show()` function.</s>",
    "QA": {
      "question": "Which sustainability indicator has outliers greater than twice the value of its third quartile (Q3)?",
      "answer_gt": "Water Consumption",
      "answer_pred": "The sustainability indicator with outliers greater than twice the value of its third quartile (Q3) is Renewable Energy Usage (%),Values,50).</s>"
    }
  },
  {
    "imgname": "bubble_160",
    "title_gt": " Impact and Success of Notable Artists in the World of Arts and Culture",
    "title_pred": " Impact and Success of Notable Artists in the World of Arts and Culture ",
    "type_gt": "bubble",
    "type_pred": "bubble",
    "csv_gt": "Artist \\t Artwork Sold (In Thousands) \\t Cultural Influence (Score) \\t Global Recognition (Score) \\t Artistic Impact (Score) \\n Picasso \\t 120 \\t 90 \\t 85 \\t 80 \\n Van Gogh \\t 80 \\t 85 \\t 88 \\t 84 \\n Da Vinci \\t 200 \\t 95 \\t 98 \\t 92 \\n Monet \\t 60 \\t 82 \\t 86 \\t 80 \\n Hockney \\t 50 \\t 80 \\t 83 \\t 76 \\n Koons \\t 45 \\t 78 \\t 79 \\t 72 \\n Rembrandt \\t 90 \\t 84 \\t 86 \\t 82 \\n Warhol \\t 110 \\t 89 \\t 93 \\t 90 \\n Michelangelo \\t 150 \\t 94 \\t 97 \\t 95 \\n ",
    "csv_pred": "Artist \\t Cultural Influence (Score) \\t Global Recognition (Score) \\n Picasso \\t 40 \\t 90 \\n Van Gogh \\t 30 \\t 85 \\n Da Vinci \\t 20 \\t 95 \\n Monet \\t 15 \\t 82 \\n Hockney \\t 10 \\t 80 \\n Koons \\t 10 \\t 78 \\n Rembrandt \\t 15 \\t 84 \\n Warhol \\t 10 \\t 89 \\n Michelangelo \\t 10 \\t 94 \\n ",
    "description_pred": "The chart provided shows the impact and success of notable artists in the world of arts and culture. The data is presented in a bubble chart format, with each artist represented by a bubble that is labeled with their name and two scores: Cultural Influence (Score) and Global Recognition (Score).\n\nAccording to the chart, Pablo Picasso is the most influential artist in terms of cultural influence, with a score of 40 out of 100. He is also highly recognized globally, with a score of 90 out of 100 for global recognition. Vincent van Gogh is another influential artist, with a cultural influence score of 30 and a global recognition score of 85. Leonardo da Vinci, Michelangelo, and Claude Monet are also highly influential, with scores ranging from 20 to 30 for cultural influence and 80 to 95 for global recognition.\n\nIn terms of global recognition, Vincent van Gogh is the most recognized artist, with a score of 85 out of 100. Claude Monet is not far behind, with a score of 82 out of 100. David Hockney, Jeff Koons, and Damien Hirst are also highly recognized, with scores ranging from 78 to 80.\n\nOverall, the chart provides a clear picture of the impact and success of notable artists in the world of arts and culture. It shows that there are many talented artists who have made significant contributions to the world of art, and that their work continues to be recognized and celebrated today.</s>",
    "summarization_pred": "The chart provided shows the impact and success of notable artists in the world of arts and culture. The data is presented in a bubble chart format, with each artist represented by a bubble that indicates their Cultural Influence (Score) and Global Recognition (Score).\n\nFrom the chart, we can see that Pablo Picasso and Vincent van Gogh are the most influential artists, with high scores in both Cultural Influence and Global Recognition. Leonardo da Vinci and Claude Monet also have high scores in Cultural Influence, while Vincent van Gogh has the highest score in Global Recognition.\n\nJeff Koons and Damien Hirst are also notable for their high Cultural Influence scores, while their Global Recognition scores are lower. Rembrandt and Warhol have high scores in both categories, while Michelangelo has the highest score in Global Recognition.\n\nOverall, the chart highlights the significant impact and success of these notable artists in the world of arts and culture, with Picasso and van Gogh leading the way in both influence and recognition.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, you can use the Matplotlib library. Here is an example code that you can use:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [\n    ('Picasso', 40, 90),\n    ('Van Gogh', 30, 85),\n    ('Da Vinci', 20, 95),\n    ('Monet', 15, 82),\n    ('Hockney', 10, 80),\n    ('Koons', 10, 78),\n    ('Rembrandt', 15, 84),\n    ('Warhol', 10, 89),\n    ('Michelangelo', 10, 94)\n]\n\n# Define the title and type of the chart\ntitle = 'Impact and Success of Notable Artists in the World of Arts and Culture'\ntype = 'bubble'\n\n# Create the chart\nfig, ax = plt.subplots()\nax.scatter(data, c=data[1], cmap='viridis')\nax.set_title(title, fontsize=16)\nax.set_xlabel('Cultural Influence (Score)', fontsize=12)\nax.set_ylabel('Global Recognition (Score)', fontsize=12)\nax.set_xticks(range(len(data)))\nax.set_yticks(range(len(data[1])))\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\nax.spines['left'].set_linewidth(0.5)\nax.spines['bottom'].set_linewidth(0.5)\nplt.tight_layout()\n\n# Show the chart\nplt.show()\n```\nThis code will create a scatter plot with the data points for each artist, where the x-axis represents Cultural Influence (Score) and the y-axis represents Global Recognition (Score). The chart will be labeled with the title and axis labels, and the spines will be hidden to make the chart look cleaner. The chart will also be",
    "QA": {
      "question": "How many artworks (in thousands) did Rembrandt sell?",
      "answer_gt": "90",
      "answer_pred": "Rembrandt sold 15 artworks.</s>"
    }
  },
  {
    "imgname": "bubble_104",
    "title_gt": " Financial Performance of Major Global Companies in 2023",
    "title_pred": " Financial Performance of Major Global Companies in 2023 ",
    "type_gt": "bubble",
    "type_pred": "bubble",
    "csv_gt": "Company \\t Market Cap (Billion $) \\t Revenue (Billion $) \\t EBITDA (Billion $) \\t Debt (Billion $) \\n Walmart \\t 395 \\t 524 \\t 34 \\t 58 \\n Apple \\t 2250 \\t 274 \\t 74 \\t 113 \\n Amazon \\t 1700 \\t 419 \\t 48 \\t 91 \\n Microsoft \\t 1850 \\t 143 \\t 60 \\t 62 \\n Alphabet \\t 1500 \\t 182 \\t 47 \\t 22 \\n Facebook \\t 850 \\t 86 \\t 39 \\t 12 \\n Alibaba \\t 570 \\t 72 \\t 24 \\t 39 \\n Tesla \\t 830 \\t 32 \\t 6 \\t 11 \\n Johnson & Johnson \\t 420 \\t 82 \\t 29 \\t 31 \\n ",
    "csv_pred": "Company \\t Revenue (Billion $) \\t Revenue (Billion $) \\t Revenue (Billion $) \\n Apple \\t 545 \\t 75 \\t 100 \\n Microsoft \\t 100 \\t 50 \\t 60 \\n Alibaba \\t 24 \\t 70 \\t 39 \\n Facebook \\t 100 \\t 47 \\t 39 \\n Alibaba \\t 200 \\t 70 \\t 60 \\n Johnson & Johnson \\t 29 \\t 80 \\t 29 \\n ",
    "description_pred": "The Financial Performance of Major Global Companies in 2023 chart shows the revenue of several well-known companies in billions of dollars. The chart is presented in a bubble format, with each company's revenue data represented by a bubble. The chart includes Apple, Microsoft, Alibaba, Facebook, Johnson & Johnson, and several other companies.\n\nAccording to the chart, Apple had a revenue of 545 billion dollars in 2023, followed by Microsoft with 100 billion dollars, Alibaba with 24 billion dollars, Facebook with 100 billion dollars, Johnson & Johnson with 29 billion dollars, and so on. The chart provides a clear visual representation of the financial performance of these companies in 2023, allowing for easy comparison and analysis.</s>",
    "summarization_pred": "The chart provided shows the financial performance of major global companies in 2023. The data is presented in the form of bubbles, with each bubble representing a company and its corresponding revenue in billions of dollars.\n\nFrom the chart, we can see that Apple had the highest revenue in 2023 with 100 billion dollars, followed by Microsoft with 100 billion dollars and Alibaba with 24 billion dollars. Facebook had a revenue of 100 billion dollars, while Johnson & Johnson had a revenue of 29 billion dollars.\n\nIt is worth noting that Alibaba's revenue increased significantly from 24 billion dollars in 2022 to 200 billion dollars in 2023, while Johnson & Johnson's revenue remained relatively stable at 29 billion dollars.\n\nOverall, the chart provides a clear picture of the financial performance of these major global companies in 2023, with Apple and Microsoft leading the pack in terms of revenue.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, you can use a library like Matplotlib or Seaborn. Here is an example using Matplotlib:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [\n    ('Apple', 545),\n    ('Apple', 75),\n    ('Apple', 100),\n    ('Microsoft', 100),\n    ('Microsoft', 50),\n    ('Microsoft', 60),\n    ('Alibaba', 24),\n    ('Alibaba', 70),\n    ('Alibaba', 39),\n    ('Facebook', 100),\n    ('Facebook', 47),\n    ('Facebook', 39),\n    ('Alibaba', 200),\n    ('Alibaba', 70),\n    ('Alibaba', 60),\n    ('Johnson & Johnson', 29),\n    ('Johnson & Johnson', 80),\n    ('Johnson & Johnson', 29)\n]\n\n# Define the title and type of the chart\ntitle = 'Financial Performance of Major Global Companies in 2023'\ntype = 'bubble'\n\n# Create the chart\nfig, ax = plt.subplots()\nax.scatter(data[0][0], data[0][1], label=data[0][0])\nfor i, (company, revenue) in enumerate(data[1:], start=1):\n    ax.scatter(revenue, data[i][1], label=company)\nax.set_xlabel('Revenue (Billion $)')\nax.set_ylabel('')\nax.set_title(title)\nax.legend()\nplt.show()\n```\nThis code will create a scatter plot with the data points for each company, where the x-axis represents the revenue in billions of dollars and the y-axis is not labeled since it is a bubble chart. The title and type of the chart are also defined and displayed.</s>",
    "QA": {
      "question": "What is the Revenue of Amazon?",
      "answer_gt": "419",
      "answer_pred": "Amazon's revenue is 545 billion dollars.</s>"
    }
  },
  {
    "imgname": "candlestick_30",
    "title_gt": " Sports and Entertainment Industry Financing Trend Overview",
    "title_pred": " Sports and Entertainment Industry Financing Trend Overview ",
    "type_gt": "candlestick",
    "type_pred": "candlestick",
    "csv_gt": "Date \\t Opening Price ($) \\t Closing Price ($) \\t High Price ($) \\t Low Price ($) \\n 2019-07-26 \\t 10 \\t 11.2 \\t 12.5 \\t 9.3 \\n 2019-07-27 \\t 10.5 \\t 11.8 \\t 13.2 \\t 9.9 \\n 2019-07-28 \\t 11 \\t 11.4 \\t 12.3 \\t 10.5 \\n 2019-07-29 \\t 12 \\t 13 \\t 14 \\t 11.2 \\n 2019-07-30 \\t 12.8 \\t 13.2 \\t 14.6 \\t 11.8 \\n 2019-07-31 \\t 12.5 \\t 13.8 \\t 14.7 \\t 11.6 \\n ",
    "csv_pred": "Date \\t Opening Price ($) \\t Closing Price ($) \\t High Price ($) \\t Low Price ($) \\n 2019-07-01 \\t 10.2 \\t 11.2 \\t 10.2 \\t 10.4 \\n 2019-08-02 \\t 10.5 \\t 11.5 \\t 10.6 \\t 10.8 \\n 2019-09-03 \\t 10.9 \\t 11.2 \\t 10.9 \\t 10.9 \\n 2019-10-04 \\t 11.2 \\t 11.7 \\t 11.2 \\t 11.2 \\n 2019-11-05 \\t 11.7 \\t 11.9 \\t 12.1 \\t 11.4 \\n 2019-12-06 \\t 12.2 \\t 12.2 \\t 12.7 \\t 11.7 \\n 2019-12-07 \\t 12.3 \\t 12.5 \\t 13.2 \\t 11.9 \\n 2019-13-08 \\t 12.7 \\t 13.2 \\t 13.7 \\t 12.1 \\n 2019-13-19 \\t 13.2 \\t 13.5 \\t 14.2 \\t 12.4 \\n ",
    "description_pred": "The Sports and Entertainment Industry Financing Trend Overview chart shows the opening and closing prices, high and low prices, and trading volume for various dates. The chart is in the form of a candlestick, with each date represented by a candlestick that is either filled or empty. The dates range from July 1, 2019, to December 19, 2019. The chart shows a general upward trend in prices, with some fluctuations and dips along the way. The highest price reached was $13.7 on August 2, 2019, and the lowest price was $10.4 on July 1, 2019. Overall, the chart suggests that the Sports and Entertainment Industry was experiencing a period of growth and expansion during this time.</s>",
    "summarization_pred": "The chart provided shows the financing trend of the sports and entertainment industry over a period of several months. The opening price for each date ranges from 10.2 to 13.7, with a peak at 14.2. The closing price also ranges from 10.2 to 13.5, with a peak at 13.2. The high price ranges from 10.2 to 13.7, with a peak at 13.7. The low price ranges from 10.4 to 11.7, with a peak at 11.9. Overall, the chart suggests that the financing trend for the sports and entertainment industry has been generally increasing, with some fluctuations and a slight decline towards the end of the period.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, we can use the Matplotlib library. Here is an example code that can be used to plot the data:\n```python\nimport matplotlib.pyplot as plt\n\nplt.plot(data[0], label='Opening Price ($)')\nplt.plot(data[1], label='Closing Price ($)')\nplt.plot(data[2], label='High Price ($)')\nplt.plot(data[3], label='Low Price ($)')\nplt.legend()\nplt.title('Sports and Entertainment Industry Financing Trend Overview')\nplt.xlabel('Date')\nplt.ylabel('Price ($)')\nplt.show()\n```\nThis code will create a candlestick chart with the data provided. The `plt.plot()` function is used to plot the opening price, closing price, high price, and low price of the stock. The `plt.legend()` function is used to add a legend to the chart, and the `plt.title()` and `plt.xlabel()` functions are used to add a title and x-axis label to the chart, respectively. Finally, the `plt.show()` function is used to display the chart.</s>",
    "QA": {
      "question": "On what date was the Closing Price exactly $11.4?",
      "answer_gt": "2019-07-28",
      "answer_pred": "\nThe Closing Price was exactly $11.4 on 2019-11-05.</s>"
    }
  },
  {
    "imgname": "candlestick_232",
    "title_gt": " Financial Trend of Sports and Entertainment Company",
    "title_pred": " Financial Trend of Sports and Entertainment Company ",
    "type_gt": "candlestick",
    "type_pred": "candlestick",
    "csv_gt": "Date \\t Opening Price ($) \\t Closing Price ($) \\t High Price ($) \\t Low Price ($) \\n 2021-01-05 \\t 75 \\t 77 \\t 80 \\t 70 \\n 2021-01-12 \\t 78 \\t 75.5 \\t 81 \\t 73 \\n 2021-01-19 \\t 72.5 \\t 70 \\t 75.3 \\t 67 \\n 2021-01-26 \\t 71 \\t 73 \\t 76 \\t 69 \\n 2021-02-02 \\t 74 \\t 78.1 \\t 80.2 \\t 72.5 \\n 2021-02-09 \\t 76 \\t 78 \\t 82 \\t 74 \\n 2021-02-16 \\t 80 \\t 82 \\t 84.5 \\t 77.5 \\n 2021-02-23 \\t 82 \\t 80.5 \\t 86 \\t 78 \\n 2021-03-02 \\t 81 \\t 83 \\t 86.2 \\t 80.5 \\n 2021-03-09 \\t 85 \\t 88 \\t 90.5 \\t 82 \\n 2021-03-16 \\t 88 \\t 85.5 \\t 89.2 \\t 84 \\n 2021-03-23 \\t 80 \\t 82 \\t 84 \\t 78 \\n 2021-03-30 \\t 82 \\t 80 \\t 84.5 \\t 77 \\n ",
    "csv_pred": "Date \\t Opening Price ($) \\t Closing Price ($) \\t High Price ($) \\t Low Price ($) \\n 2021-07-03 \\t 77.2 \\t 75.7 \\t 76.2 \\t 71.2 \\n 2021-08-04 \\t 70.2 \\t 72.2 \\t 73.2 \\t 70.2 \\n 2021-09-05 \\t 72.2 \\t 74.2 \\t 77.7 \\t 72.7 \\n 2021-10-06 \\t 76.2 \\t 78.2 \\t 78.7 \\t 74.2 \\n 2021-11-07 \\t 78.2 \\t 79.2 \\t 80.2 \\t 76.7 \\n 2021-12-08 \\t 78.2 \\t 81.2 \\t 82.7 \\t 78.2 \\n 2021-13-09 \\t 81.7 \\t 83.2 \\t 84.7 \\t 80.2 \\n 2021-14-10 \\t 83.7 \\t 85.7 \\t 87.7 \\t 81.2 \\n 2021-15-11 \\t 82.2 \\t 86.7 \\t 89.2 \\t 82.7 \\n 2021-16-12 \\t 83.2 \\t 88.2 \\t 81.7 \\t 83.7 \\n 2021-17-13 \\t 81.2 \\t 81.7 \\t 83.7 \\t 84.2 \\n 2021-18-14 \\t 83.7 \\t 86.7 \\t 85.2 \\t 86.7 \\n 2021-19-20 \\t 82.2 \\t 81.7 \\t 86.7 \\t 87.7 \\n 2022-10-15 \\t 82.2 \\t 80.2 \\t 87.7 \\t 88.7 \\n 2022-10-16 \\t 82.2 \\t 81.2 \\t 89.2 \\t 89.2 \\n ",
    "description_pred": "The chart provided shows the financial trend of a sports and entertainment company over a period of several months. The opening and closing prices, as well as the high and low prices, are all displayed for each date. The company's stock began the period at $77.2 on July 3, 2021, and reached a high of $87.7 on October 15, 2022. The stock experienced a dip in price on August 4, 2021, and again on November 5, 2021, but overall, the trend is upward.</s>",
    "summarization_pred": "The chart shows the opening and closing prices of a sports and entertainment company's stock over a period of several months. The company's stock price began at $77.2 on July 3, 2021, and reached a high of $87.7 on October 15, 2022. There were several drops in price, including a low of $71.2 on July 3, 2021, and a low of $80.2 on December 8, 2021. Overall, the stock price trended upwards, with several notable spikes and drops along the way.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, we can use the Matplotlib library. Here is an example code that can be used to plot the given data:\n```python\nimport matplotlib.pyplot as plt\n\ndata = [(2021-07-03,77.2),(2021-07-03,75.7),(2021-07-03,76.2),(2021-07-03,71.2),(2021-08-04,70.2),(2021-08-04,72.2),(2021-08-04,73.2),(2021-08-04,70.2),(2021-09-05,72.2),(2021-09-05,74.2),(2021-09-05,77.7),(2021-09-05,72.7),(2021-10-06,76.2),(2021-10-06,78.2),(2021-10-06,78.7),(2021-10-06,74.2),(2021-11-07,78.2),(2021-11-07,79.2),(2021-11-07,80.2),(2021-11-07,76.7),(2021-12-08,78.2),(2021-12-08,81.2),(2021-12-08,82.7),(2021-12-08,78.2),(2021-13-09,81.7),(2021-13-09,83.2),(2021-13-09,84.7),(2021-13-09,76.7),(2021-14-10,83.7",
    "QA": {
      "question": "What was the High Price on 2021-02-16?",
      "answer_gt": "$84.5",
      "answer_pred": "\nThe High Price on 2021-02-16 was 77.2.</s>"
    }
  },
  {
    "imgname": "27",
    "title_gt": " Academic Progress in Social Sciences and Humanities in 2021",
    "title_pred": " Academic Progress in Social Sciences and Humanities in 2021 ",
    "type_gt": "funnel",
    "type_pred": "funnel",
    "csv_gt": "Stage \\t Value \\n Research Interests \\t 1000 \\n Literature Review \\t 800 \\n Data Collection \\t 600 \\n Analysis and Interpretation \\t 400 \\n Conclusion \\t 200 \\n ",
    "csv_pred": "Stage \\t Value \\n Research Interests \\t 1000 \\n Literature Review \\t 800 \\n Data Collection \\t 600 \\n Analysis and Interpretation \\t 400 \\n Conclusion \\t 200 \\n ",
    "description_pred": "Based on the provided chart image, it appears to be a funnel chart showing the distribution of academic progress in Social Sciences and Humanities in 2021. The funnel chart is divided into five sections, each representing a different stage of the academic progress process. The sections are labeled as Research Interests, Literature Review, Data Collection, Analysis and Interpretation, and Conclusion.\n\nAccording to the chart, the largest section is labeled Research Interests, which accounts for 1000 points. This section likely represents the initial stage of the academic progress process, where scholars identify and explore their research interests. The next section, Literature Review, accounts for 800 points and likely represents the stage where scholars review and analyze existing literature related to their research interests.\n\nThe section labeled Data Collection accounts for 600 points and likely represents the stage where scholars collect and analyze data related to their research interests. The section labeled Analysis and Interpretation accounts for 400 points and likely represents the stage where scholars analyze and interpret the data they have collected.\n\nFinally, the section labeled Conclusion accounts for 200 points and likely represents the stage where scholars draw conclusions and make recommendations based on their analysis and interpretation of the data.\n\nOverall, the funnel chart provides a visual representation of the distribution of academic progress in Social Sciences and Humanities in 2021, highlighting the various stages involved in the academic progress process.</s>",
    "summarization_pred": "Based on the funnel chart image provided, it appears that the academic progress in Social Sciences and Humanities in 2021 can be summarized as follows:\n\n* Research Interests accounted for the largest proportion of the total academic progress, with a value of 1000.\n* Literature Review was the second largest contributor, with a value of 800.\n* Data Collection and Analysis and Interpretation were the third and fourth largest contributors, with values of 600 and 400, respectively.\n* Conclusion rounded out the top five, with a value of 200.\n\nOverall, it seems that Research Interests and Literature Review were the most important areas of focus for academic progress in Social Sciences and Humanities in 2021, while Data Collection and Analysis and Interpretation were also significant contributors.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, you can use the Matplotlib library. Here is an example of how you can create a funnel chart with the given data:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [\n    ('Research Interests', 1000),\n    ('Literature Review', 800),\n    ('Data Collection', 600),\n    ('Analysis and Interpretation', 400),\n    ('Conclusion', 200)\n]\n\n# Create the funnel chart\nfig, ax = plt.subplots()\nax.bar(data, color='b')\nax.set_title('Academic Progress in Social Sciences and Humanities in 2021')\nax.set_xlabel('Tasks')\nax.set_ylabel('Value')\nax.set_xticks(range(len(data)))\nax.set_xticklabels(data)\nax.legend(loc='center left', bbox_to_anchor=(1, 0.5))\n\n# Show the chart\nplt.show()\n```\nThis code will create a funnel chart with the given title, tasks, and values. You can customize the chart further by modifying the data, colors, labels, and other properties as needed.</s>",
    "QA": {
      "question": "How many points is the \"Literature Review\" stage valued at?",
      "answer_gt": "800",
      "answer_pred": "The \"Literature Review\" stage is valued at 800 points.</s>"
    }
  },
  {
    "imgname": "175",
    "title_gt": " House Purchases in Real Estate and Housing Market in 2020",
    "title_pred": " House Purchases in Real Estate and Housing Market in 2020 ",
    "type_gt": "funnel",
    "type_pred": "funnel",
    "csv_gt": "Stage \\t Value \\n Research \\t 1000 \\n Inquiry \\t 800 \\n Shortlist \\t 600 \\n Offer \\t 400 \\n Closing \\t 200 \\n ",
    "csv_pred": "Stage \\t Value \\n Research \\t 1000 \\n Inquiry \\t 800 \\n Shortlist \\t 600 \\n Offer \\t 400 \\n Closing \\t 200 \\n ",
    "description_pred": "The funnel chart image provided shows the various stages of a house purchase in the real estate and housing market in 2020. The stages represented in the funnel are: Research, Inquiry, Shortlist, Offer, and Closing. The values associated with each stage are: 1000, 800, 600, 400, and 200 respectively. The funnel chart is a useful tool for visualizing the process of a house purchase and the relative proportion of each stage in the overall process. It shows that the majority of potential buyers start with research and inquiry, and then move on to shortlisting properties, making offers, and finally closing the deal. The funnel chart provides a clear picture of the house purchase process in the real estate and housing market in 2020, and can be used to analyze and compare different aspects of the process.</s>",
    "summarization_pred": "The chart provided shows the different stages of a house purchase in the real estate and housing market in 2020. The stages include Research, Inquiry, Shortlist, Offer, and Closing. The values for each stage are shown as 1000, 800, 600, 400, and 200 respectively. It can be observed that the majority of the purchases happen in the Inquiry and Shortlist stages, with values of 800 and 600 respectively. The Offer stage has the lowest value of 400, indicating that not many purchases happen at this stage. The Closing stage has the highest value of 200, indicating that most purchases happen at this stage. Overall, the chart shows that the majority of purchases happen in the early stages of the funnel, with the Closing stage being the most important for generating revenue.</s>",
    "redrawing_code_pred": "Here is the Python code to redraw the funnel chart image based on the provided input:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [('Research', 1000), ('Inquiry', 800), ('Shortlist', 600), ('Offer', 400), ('Closing', 200)]\n\n# Define the title\ntitle = 'House Purchases in Real Estate and Housing Market in 2020'\n\n# Define the type of chart as funnel\ntype = 'funnel'\n\n# Create the chart\nfig, ax = plt.subplots()\nax.plot(data, title=title, type=type)\n\n# Show the chart\nplt.show()\n```\nThis code will create a funnel chart with the title \"House Purchases in Real Estate and Housing Market in 2020\" and the data provided in the input.</s>",
    "QA": {
      "question": "What is the value at the Shortlist stage?",
      "answer_gt": "600",
      "answer_pred": "The value at the Shortlist stage is 600.</s>"
    }
  },
  {
    "imgname": "228",
    "title_gt": " National CO2 Emissions Overview: Environment and Sustainability",
    "title_pred": " National CO2 Emissions Overview: Environment and Sustainability ",
    "type_gt": "histogram",
    "type_pred": "histogram",
    "csv_gt": "CO2 Emissions (Million Metric Tons) \\t Country \\n United States \\t 5000 \\n China \\t 10300 \\n India \\t 2400 \\n Russia \\t 1600 \\n Japan \\t 1200 \\n Germany \\t 780 \\n United Kingdom \\t 415 \\n France \\t 365 \\n Brazil \\t 260 \\n Canada \\t 550 \\n ",
    "csv_pred": "Country \\t National CO2 Emissions \\t Environmental and Sustainability \\n United States \\t 5000 \\n China \\t 10300 \\n India \\t 2400 \\n Russia \\t 1500 \\n Japan \\t 1200 \\n Germany \\t 700 \\n United Kingdom \\t 350 \\n France \\t 300 \\n Brazil \\t 200 \\n Canada \\t 500 \\n ",
    "description_pred": "The National CO2 Emissions Overview: Environment and Sustainability histogram displays the CO2 emissions of various countries. The United States has the highest emissions at 5000, followed by China with 10300, India with 2400, Russia with 1500, Japan with 1200, Germany with 700, the United Kingdom with 350, France with 300, Brazil with 200, and Canada with 500. This data highlights the need for countries to reduce their CO2 emissions to promote environmental and sustainability efforts.</s>",
    "summarization_pred": "The chart provided shows the national CO2 emissions for various countries, including the United States, China, India, Russia, Japan, Germany, the United Kingdom, France, Brazil, and Canada. The data is presented in a histogram format, with the countries listed along the x-axis and their respective CO2 emissions on the y-axis.\n\nKey insights from the chart include:\n\n* The United States has the highest national CO2 emissions, followed by China and India.\n* Russia and Japan have relatively low national CO2 emissions.\n* Germany and the United Kingdom have moderate national CO2 emissions, while France has slightly higher emissions than Germany.\n* Brazil and Canada have relatively low national CO2 emissions compared to other countries.\n\nOverall, the chart provides an overview of national CO2 emissions and highlights the differences in emissions levels between countries. This information can be useful for understanding global environmental and sustainability issues.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, you can use the Matplotlib library. Here is an example of how you can do it:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ndata = [\n    (United States,5000),\n    (China,10300),\n    (India,2400),\n    (Russia,1500),\n    (Japan,1200),\n    (Germany,700),\n    (United Kingdom,350),\n    (France,300),\n    (Brazil,200),\n    (Canada,500)\n]\n\n# Define the title and type of the chart\ntitle = \"National CO2 Emissions Overview: Environment and Sustainability\"\ntype = \"histogram\"\n\n# Create the chart\nfig, ax = plt.subplots()\nax.bar(data, label=data[1])\nax.set_title(title)\nax.set_xlabel(\"Country\")\nax.set_ylabel(\"CO2 Emissions (in tons)\")\nax.set_xticks(range(len(data)))\nax.legend()\n\n# Show the chart\nplt.show()\n```\nThis code will create a histogram chart with the data provided, using the Matplotlib library. You can customize the chart by modifying the data, title, and other parameters.</s>",
    "QA": {
      "question": "What is the total CO2 emissions of the United Kingdom and France combined?",
      "answer_gt": "780 million metric tons",
      "answer_pred": "The total CO2 emissions of the United Kingdom and France combined is 10300 + 300 = 10600.</s>"
    }
  },
  {
    "imgname": "27",
    "title_gt": " Average Test Scores by Grade Level in Elementary Educatio",
    "title_pred": " Average Test Scores by Grade Level in Elementary Education ",
    "type_gt": "histogram",
    "type_pred": "histogram",
    "csv_gt": "Grade Level \\t Average Test Score (Out of 100) \\n Kindergarten \\t 82 \\n 1st Grade \\t 84 \\n 2nd Grade \\t 86 \\n 3rd Grade \\t 87 \\n 4th Grade \\t 90 \\n 5th Grade \\t 92 \\n 6th Grade \\t 91 \\n 7th Grade \\t 89 \\n 8th Grade \\t 90 \\n ",
    "csv_pred": "Grade Level \\t Average test score \\n Kindergarten \\t 82.2 \\n 1st Grade \\t 83.7 \\n 2nd Grade \\t 86.2 \\n 3rd Grade \\t 87.2 \\n 4th Grade \\t 89.7 \\n 5th Grade \\t 91.7 \\n 6th Grade \\t 90.9 \\n 7th Grade \\t 88.7 \\n 8th Grade \\t 89.2 \\n ",
    "description_pred": "The histogram shows the average test scores of students in elementary education by grade level. Kindergarten students had an average test score of 82.2, while 1st-grade students had an average test score of 83.7. As students progress through the grades, their average test scores increase. 2nd-grade students had an average test score of 86.2, followed by 3rd-grade students with an average test score of 87.2. The trend continues with 4th-grade students having an average test score of 89.7, 5th-grade students with an average test score of 91.7, and 6th-grade students with an average test score of 90.9. The highest average test scores were achieved by 7th-grade students with an average score of 88.7, and 8th-grade students had an average test score of 89.2. Overall, the histogram illustrates a steady increase in average test scores as students progress through elementary education.</s>",
    "summarization_pred": "The histogram shows the average test scores of students in elementary education by grade level. Kindergarten has an average test score of 82.2, while 1st grade has an average test score of 83.7. As the grade level increases, so does the average test score, with 8th grade having an average test score of 89.2. The highest average test score is seen in 7th grade with 88.7. Overall, the chart indicates that average test scores increase as students progress through elementary education.</s>",
    "redrawing_code_pred": "Here is the Python code to redraw the histogram image based on the input provided:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data and title\ndata = [('Kindergarten', 82.2), ('1st Grade', 83.7), ('2nd Grade', 86.2), ('3rd Grade', 87.2), ('4th Grade', 89.7), ('5th Grade', 91.7), ('6th Grade', 90.9), ('7th Grade', 88.7), ('8th Grade', 89.2)]\ntitle = 'Average Test Scores by Grade Level in Elementary Education'\n\n# Define the type of plot\ntype = 'histogram'\n\n# Create the plot\nplt.hist(data, bins=range(80, 101), alpha=0.7, color='blue', edgecolor='black', linestyle='--', label=title)\nplt.xlabel('Average Test Score')\nplt.ylabel('Frequency')\nplt.legend()\nplt.show()\n```\nThis code uses the `matplotlib` library to create a histogram plot of the average test scores by grade level in elementary education. The `data` variable contains the data for each grade level, while the `title` variable contains the title for the plot. The `type` variable specifies that the plot should be a histogram. The `plt.hist()` function is used to create the plot, with the `bins` parameter specifying the number of bins for the histogram, and the `alpha` and `color` parameters specifying the transparency and color of the plot. The `plt.xlabel()`, `plt.ylabel()`, and `plt.legend()` functions are used to label the x-axis, y-axis, and legend of the plot, respectively. Finally, the `plt.show()` function is used to display the plot.</s>",
    "QA": {
      "question": "What is the average test score for 3rd Grade?",
      "answer_gt": "87",
      "answer_pred": "The average test score for 3rd Grade is 87.2.</s>"
    }
  },
  {
    "imgname": "multi-axes_105",
    "title_gt": " Tourism and Hospitality Industry Performance: Visitor Volume, Duration, and Revenues ",
    "title_pred": " Tourism and Hospitality Industry Performance: Visitor Volume, Duration, and Revenues ",
    "type_gt": "multi-axes",
    "type_pred": "multi-axes",
    "csv_gt": "Category \\t Number of Tourists (in Thousands) \\t Average Stay (in Nights) \\t Revenue (in Millions of Dollars) \\n Hotels and Accommodations \\t 1720 \\t 4.5 \\t 4460 \\n Sightseeing \\t 1040 \\t 2.9 \\t 980 \\n Outdoor Adventures \\t 530 \\t 3.2 \\t 660 \\n Local Cuisine \\t 830 \\t 1.7 \\t 2120 \\n Shopping \\t 570 \\t 4.1 \\t 720 \\n Cultural Attractions \\t 650 \\t 3.4 \\t 720 \\n Wellness and Spa \\t 400 \\t 3.8 \\t 590 \\n Nightlife \\t 200 \\t 2.6 \\t 490 \\n ",
    "csv_pred": "Category \\t Number of Tourists (in Thousands) \\t Average Stay (in Nights) \\t Revenue (in Millions of Dollars) \\n Hotels and Accommodations \\t 1700 \\t 1500 \\t 3500 \\n Sightseeing \\t 1050 \\t 800 \\t 2500 \\n Outdoor Adventures \\t 550 \\t 1000 \\t 1500 \\n Local Cuisine \\t 400 \\t 700 \\t 1000 \\n Shopping \\t 600 \\t 1500 \\t 1800 \\n Cultural Attractions \\t 1000 \\t 1500 \\t 1800 \\n Wellness and Spa \\t 1500 \\t 1000 \\t 1000 \\n Nightlife \\t 1000 \\t 500 \\t 2000 \\n ",
    "description_pred": "The chart provided shows the performance of the tourism and hospitality industry in terms of visitor volume, average stay, and revenue for various types of attractions, including hotels and accommodations, sightseeing, outdoor adventures, local cuisine, shopping, cultural attractions, wellness and spa, and nightlife. The data is presented in a multi-axes format, with each axis representing a different category of tourism activity.\n\nAccording to the chart, hotels and accommodations attract the highest number of tourists, with an average stay of 1500 nights and a revenue of 3500 million dollars. Sightseeing is the second most popular activity, with an average stay of 800 nights and a revenue of 2500 million dollars. Outdoor adventures, local cuisine, shopping, cultural attractions, wellness and spa, and nightlife are all popular activities as well, with visitor volume ranging from 550 to 1500 tourists and revenue ranging from 1500 to 1800 million dollars.\n\nOverall, the chart shows that the tourism and hospitality industry is a significant contributor to the economy, with a wide range of activities that appeal to tourists. The data presented in the chart provides valuable insights into the performance of the industry and can be used to inform decision-making and strategic planning for businesses in the sector.</s>",
    "summarization_pred": "The chart provided shows the performance of the tourism and hospitality industry across various segments, including hotels and accommodations, sightseeing, outdoor adventures, local cuisine, shopping, cultural attractions, wellness and spa, and nightlife. The data is presented in terms of the number of tourists, average stay, and revenue generated in millions of dollars.\n\nKey insights from the chart can be summarized as follows:\n\n* Hotels and accommodations generate the highest revenue among all segments, with an average stay of 1500 nights and revenue of $3500 million.\n* Sightseeing and outdoor adventures have the highest number of tourists, with an average stay of 800 and 1000 nights, respectively, and revenue of $2500 and $1500 million, respectively.\n* Local cuisine and shopping have a moderate number of tourists, with an average stay of 700 and 1500 nights, respectively, and revenue of $1000 and $1800 million, respectively.\n* Cultural attractions and wellness and spa have a moderate number of tourists, with an average stay of 1500 nights and revenue of $1800 and $1000 million, respectively.\n* Nightlife has the lowest number of tourists among all segments, with an average stay of 500 nights and revenue of $2000 million.\n\nOverall, the chart suggests that hotels and accommodations and sightseeing are the most popular segments among tourists, generating the highest revenue. Local cuisine, shopping, cultural attractions, and wellness and spa are moderately popular, while nightlife is the least popular segment.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, we can use the Matplotlib library. Here is an example code that can be used to create a multi-axes chart with the given data:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data for each category\nhotels_data = [(1700, 1500, 3500), (1050, 800, 2500), (550, 1000, 1500), (400, 700, 1000), (600, 1500, 1800), (1000, 1500, 1800), (1500, 1000, 1000), (1000, 1000, 1000), (1000, 500, 2000)]\nsightseeing_data = [(1050, 800, 2500), (550, 1000, 1500), (550, 1000, 1500), (550, 1000, 1500), (550, 1000, 1500), (550, 1000, 1500), (550, 1000, 1500), (550, 1000, 1500), (550, 1000, 1500)]\noutdoor_adventures_data = [(550, 1000, 1500), (550, 1000, 1500), (550, 1000, 1500), (550, 1000, 1500), (550, 1000, 1500), (550, 1000, 1500), (550, 1000, 1500),",
    "QA": {
      "question": "What is the average stay of tourists in the shopping category?",
      "answer_gt": "4.1 nights",
      "answer_pred": "The average stay of tourists in the shopping category is 1500.</s>"
    }
  },
  {
    "imgname": "multi-axes_5",
    "title_gt": " Transportation and Logistics Performance Analysis: Volume, Revenue, and Delivery Time ",
    "title_pred": " Transportation and Logistics Performance Analysis: Volume, Revenue, and Delivery Time ",
    "type_gt": "multi-axes",
    "type_pred": "multi-axes",
    "csv_gt": "Category \\t Volume Handled (Millions of Tonnes) \\t Revenue (Billions of Dollars) \\t Average Delivery Time (Minutes) \\n Freight \\t 7.2 \\t 79.9 \\t 330 \\n Passenger Transport \\t 10.9 \\t 31.1 \\t 234 \\n Warehousing \\t 5 \\t 65.9 \\t 300 \\n Shipping \\t 6.5 \\t 30.4 \\t 198 \\n Courier Services \\t 14.9 \\t 27 \\t 396 \\n Air Transport \\t 7.1 \\t 72.5 \\t 186 \\n Rail Transport \\t 11.3 \\t 81.8 \\t 204 \\n Trucking \\t 12.2 \\t 30 \\t 330 \\n Pipeline Transport \\t 6 \\t 72.5 \\t 420 \\n Logistics Services \\t 6 \\t 76.3 \\t 300 \\n ",
    "csv_pred": "Category \\t Volume Handled (Millions of Tonnes) \\t Average Delivery Time (Minutes) \\n Freight \\t 80 \\t 90 \\n Passenger Transport \\t 11 \\t 25 \\n Warehousing \\t 5 \\t 80 \\n Shipping \\t 7 \\t 15 \\n Courier Services \\t 10 \\t 14 \\n Air Transport \\t 80 \\t 13 \\n Rail Transport \\t 12 \\t 15 \\n Trucking \\t 13 \\t 30 \\n Pipeline Transport \\t 6 \\t 400 \\n Logistics Services \\t 6 \\t 300 \\n ",
    "description_pred": "The Transportation and Logistics Performance Analysis chart shows the performance of various transportation and logistics services in terms of volume handled, average delivery time, and revenue. The chart is a multi-axes type, with eight categories of services: Freight, Passenger Transport, Warehousing, Shipping, Courier Services, Air Transport, Rail Transport, and Trucking. Each category is represented by a different color and is plotted on the chart based on the volume handled, average delivery time, and revenue. The chart provides a comprehensive overview of the performance of each category of transportation and logistics services, allowing for easy comparison and analysis.</s>",
    "summarization_pred": "The chart provided shows a comparison of various transportation and logistics services in terms of volume handled, average delivery time, and revenue. The data is presented in a multi-axes format, with each service category plotted on different axes.\n\nFrom the chart, we can see that freight transportation has the highest volume handled, followed by passenger transportation, warehousing, shipping, courier services, air transport, rail transport, trucking, pipeline transport, and logistics services. In terms of average delivery time, courier services have the shortest delivery time, followed by air transport, trucking, and pipeline transport. On the other hand, warehousing has the longest average delivery time, followed by rail transport and pipeline transport.\n\nIn terms of revenue, shipping has the highest revenue, followed by air transport, courier services, and logistics services. Warehousing has the lowest revenue, followed by pipeline transport and trucking.\n\nOverall, the chart provides a comprehensive comparison of various transportation and logistics services in terms of volume, average delivery time, and revenue. This information can be useful for businesses to choose the most suitable service based on their specific needs.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, we can use the Matplotlib library. Here is an example code that can be used to create a multi-axes chart with the given data:\n```python\nimport matplotlib.pyplot as plt\n\n# Define the data for each category\ndata = [\n    ('Freight', 80, 90),\n    ('Passenger Transport', 11, 25),\n    ('Warehousing', 5, 80),\n    ('Shipping', 7, 15),\n    ('Courier Services', 10, 14),\n    ('Air Transport', 80, 13),\n    ('Rail Transport', 12, 15),\n    ('Trucking', 13, 30),\n    ('Pipeline Transport', 6, 400),\n    ('Logistics Services', 6, 300)\n]\n\n# Define the title and type of the chart\ntitle = 'Transportation and Logistics Performance Analysis: Volume, Revenue, and Delivery Time'\ntype = 'multi-axes'\n\n# Create the chart using Matplotlib\nfig, ax = plt.subplots(figsize=(10, 5))\nax.plot(data[0][1], data[0][0], label=data[0][2])\nax.plot(data[1][1], data[1][0], label=data[1][2])\nax.plot(data[2][1], data[2][0], label=data[2][2])\nax.plot(data[3][1], data[3][0], label=data[3][2])\nax.plot(data[4][1], data[4][0], label=data[4][2])\nax.plot(data[5][1], data[5][0], label=data[5][2])\nax.plot(data[6][1], data[6][0], label=data[6][2])\nax.plot(data[7][1], data[7][0], label=data[7][2])\nax.plot(data[8][1], data[8][0], label=data[8][2])\nax",
    "QA": {
      "question": "What is the revenue of rail transport?",
      "answer_gt": "81.8 billion dollars",
      "answer_pred": "\nThe revenue of rail transport is 12 million tonnes.</s>"
    }
  },
  {
    "imgname": "radar_249",
    "title_gt": " Technology and Internet Usage in 2023",
    "title_pred": " Technology and Internet Usage in 2023 ",
    "type_gt": "radar",
    "type_pred": "line_chart",
    "csv_gt": "Category \\t Q1 \\t Q2 \\t Q3 \\t Q4 \\n Social Media \\t 60 \\t 65 \\t 70 \\t 75 \\n Network Security \\t 85 \\t 90 \\t 95 \\t 100 \\n Cloud Storage \\t 75 \\t 80 \\t 85 \\t 90 \\n Online Shopping \\t 70 \\t 75 \\t 80 \\t 85 \\n Artificial Intelligence \\t 95 \\t 100 \\t 105 \\t 110 \\n ",
    "csv_pred": "Category \\t Percentage \\n Social Media \\t 80% \\n Network Security \\t 75% \\n Cloud Storage \\t 60% \\n Online Shopping \\t 50% \\n Artificial Intelligence \\t 40% \\n ",
    "description_pred": "The line chart provided shows the percentage of technology and internet usage in 2023. According to the chart, Social Media usage accounts for 80% of internet usage, Network Security accounts for 75%, Cloud Storage accounts for 60%, Online Shopping accounts for 50%, and Artificial Intelligence accounts for 40%. It is evident that Social Media is the most widely used technology, followed by Network Security, Cloud Storage, Online Shopping, and Artificial Intelligence.</s>",
    "summarization_pred": "Based on the chart image, it can be observed that Technology and Internet Usage in 2023 is dominated by Social Media with 80% usage, followed by Network Security with 75% usage, Cloud Storage with 60% usage, Online Shopping with 50% usage, and Artificial Intelligence with 40% usage. It can be inferred that Social Media is the most popular technology and internet usage in 2023, followed by Network Security, Cloud Storage, Online Shopping, and Artificial Intelligence.</s>",
    "redrawing_code_pred": "Here is the Python code to redraw the chart image with the given input:\n```python\nimport matplotlib.pyplot as plt\n\ndata = [('Social Media', 80), ('Network Security', 75), ('Cloud Storage', 60), ('Online Shopping', 50), ('Artificial Intelligence', 40)]\n\ntitle = 'Technology and Internet Usage in 2023'\n\ntype = 'line_chart'\n\nplt.bar(data, title=title, type=type)\nplt.show()\n```\nThis code will create a line chart using the matplotlib library in Python, with the data provided in the input and the title specified. The chart will be displayed using the `plt.show()` function.</s>",
    "QA": {
      "question": "How much has Online Shopping usage increased from Q1 to Q4?",
      "answer_gt": "15",
      "answer_pred": "Online Shopping usage increased from Q1 to Q4 by 50%.</s>"
    }
  },
  {
    "imgname": "radar_89",
    "title_gt": " Agricultural and Food Production Analysis",
    "title_pred": " Agricultural and Food Production Analysis ",
    "type_gt": "radar",
    "type_pred": "radar",
    "csv_gt": "Food Crop \\t Wheat \\t Corn \\t Rice \\t Barley \\t Soybeans \\n Yield (kg/ha) \\t 32 \\t 78 \\t 68 \\t 24 \\t 35 \\n Water Usage (box/hectare) \\t 25 \\t 22 \\t 23 \\t 21 \\t 24 \\n Pesticide Use (kg/ha) \\t 35 \\t 45 \\t 40 \\t 30 \\t 50 \\n Labor Cost (%) \\t 22 \\t 25 \\t 20 \\t 18 \\t 27 \\n Market Price (USD/kg) \\t 20 \\t 15 \\t 18 \\t 23 \\t 12 \\n ",
    "csv_pred": "Food Type \\t Soybeans \\t Wheat \\t Rice \\t Barley \\t Soybeans \\n Yield (kg/ha) \\t 80 \\t 75 \\t 80 \\t 90 \\t 95 \\n Water Usage (box/hectare) \\t 70 \\t 85 \\t 90 \\t 95 \\t 90 \\n Pesticide Use (kg/ha) \\t 80 \\t 95 \\t 90 \\t 85 \\t 90 \\n Labor Cost (%) \\t 80 \\t 90 \\t 85 \\t 95 \\t 90 \\n Market Price (USD/kg) \\t 85 \\t 90 \\t 95 \\t 90 \\t 95 \\n ",
    "description_pred": "The Agricultural and Food Production Analysis chart shows a comparison of various crops in terms of their yield, water usage, pesticide use, labor cost, and market price. The chart is presented in the form of a radar chart, with each crop represented by a segment that is plotted on the circumference of the chart. The segments are labeled with the crop name and provide information on the yield, water usage, pesticide use, labor cost, and market price of each crop.\n\nAccording to the chart, Soybeans have a high yield of 95 kg/ha and a moderate water usage of 70 boxes/hectare. They also have a moderate pesticide use of 80 kg/ha and a low labor cost of 80%. The market price of Soybeans is also relatively high at 85 USD/kg. Wheat has a yield of 75 kg/ha and a water usage of 85 boxes/hectare. It has a higher pesticide use of 95 kg/ha and a labor cost of 90%. The market price of Wheat is 90 USD/kg. Rice has a high yield of 80 kg/ha and a water usage of 90 boxes/hectare. It has a moderate pesticide use of 90 kg/ha and a labor cost of 85%. The market price of Rice is 95 USD/kg. Barley has a high yield of 90 kg/ha and a water usage of 95 boxes/hectare. It has a high pesticide use of 95 kg/ha and a labor cost of 95%. The market price of Barley is 90 USD/kg.\n\nOverall, the chart provides valuable information on the various factors that contribute to the production of different crops. It can be used to compare the efficiency and sustainability of different farming practices and to make informed decisions about which crops to grow and how to optimize production.</s>",
    "summarization_pred": "The chart provided shows a comparison of various agricultural products, including soybeans, wheat, rice, barley, and soybeans, in terms of their yield, water usage, pesticide use, labor cost, market price, and other metrics.\n\nFrom the chart, we can see that soybeans have a higher yield than wheat and rice, but a lower water usage and pesticide use. Soybeans also have a higher labor cost compared to other crops. In terms of market price, soybeans have a higher price than wheat and rice, but a lower price than barley.\n\nOverall, the chart provides a useful overview of the different factors that contribute to the production of various agricultural products, and highlights the trade-offs between yield, resource usage, cost, and market price.</s>",
    "redrawing_code_pred": "To redraw the chart image using Python code, we can use the Matplotlib library. Here is an example code that can be used to create a radar chart with the given data:\n```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\ndata = [\n    (80, \"Soybeans\"),\n    (75, \"Wheat\"),\n    (80, \"Rice\"),\n    (90, \"Barley\"),\n    (95, \"Soybeans\"),\n    (70, \"Soybeans\"),\n    (85, \"Wheat\"),\n    (90, \"Rice\"),\n    (95, \"Barley\"),\n    (90, \"Soybeans\"),\n    (80, \"Soybeans\"),\n    (95, \"Wheat\"),\n    (90, \"Rice\"),\n    (85, \"Barley\"),\n    (95, \"Soybeans\"),\n]\n\nlabels = [\"Yield (kg/ha)\", \"Water Usage (box/hectare)\", \"Pesticide Use (kg/ha)\", \"Labor Cost (%)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (USD/kg)\", \"Market Price (US",
    "QA": {
      "question": "Which food crop requires the highest water usage per hectare?",
      "answer_gt": "Wheat",
      "answer_pred": "Soybeans require the highest water usage per hectare.</s>"
    }
  },
  {
    "imgname": "228",
    "title_gt": " E-commerce Sales Distribution by Product Category",
    "title_pred": " E-commerce Sales Distribution by Product Category ",
    "type_gt": "treemap",
    "type_pred": "treemap",
    "csv_gt": "Product Category \\t Percentage \\n Electronics \\t 25 \\n Clothing \\t 20 \\n Home & Garden \\t 15 \\n Health & Beauty \\t 13 \\n Books & Media \\t 10 \\n Groceries \\t 8 \\n Toys & Hobbies \\t 5 \\n Jewelry \\t 4 \\n ",
    "csv_pred": "Category \\t Percentage \\n Electronics \\t 25 \\n Clothing \\t 20 \\n Home & Garden \\t 15 \\n Health & Beauty \\t 10 \\n Toys & Hobbies \\t 5 \\n Groceries \\t 5 \\n Jewelry \\t 5 \\n ",
    "description_pred": "The treemap chart shows the distribution of e-commerce sales by product category. Electronics takes up the largest percentage of sales, with 25%, followed by Clothing with 20%, Home & Garden with 15%, Health & Beauty with 10%, Toys & Hobbies with 5%, Groceries with 5%, and Jewelry with 5%. This chart provides a visual representation of the sales breakdown for each category, allowing for easy analysis and comparison.</s>",
    "summarization_pred": "The chart shows the distribution of e-commerce sales by product category. Electronics and Clothing are the top two categories with the highest sales percentage, while Home & Garden, Health & Beauty, Toys & Hobbies, Groceries, and Jewelry have lower sales percentages. The treemap format provides a clear visual representation of the sales distribution, with larger segments for the top categories and smaller segments for the lower categories. Overall, the chart suggests that Electronics and Clothing are the most popular product categories among e-commerce customers.</s>",
    "redrawing_code_pred": "Here is the Python code to redraw the chart image based on the provided input:\n```python\nimport matplotlib.pyplot as plt\nimport matplotlib.treemap as treemap\n\n# Define the data for the chart\ndata = [\n    ('Electronics', 25),\n    ('Clothing', 20),\n    ('Home & Garden', 15),\n    ('Health & Beauty', 10),\n    ('Toys & Hobbies', 5),\n    ('Groceries', 5),\n    ('Jewelry', 5)\n]\n\n# Define the title for the chart\ntitle = 'E-commerce Sales Distribution by Product Category'\n\n# Create the treemap using the data and title\ntreemap_data = treemap.TreeMap(data, labels={\n    'Electronics': 'Electronics',\n    'Clothing': 'Clothing',\n    'Home & Garden': 'Home & Garden',\n    'Health & Beauty': 'Health & Beauty',\n    'Toys & Hobbies': 'Toys & Hobbies',\n    'Groceries': 'Groceries',\n    'Jewelry': 'Jewelry'\n})\n\n# Create the treemap plot\nfig, ax = plt.subplots()\ntreemap_plot = treemap.plot(treemap_data, ax=ax, \n                           cmap=plt.cm.Blues, \n                           edgecolor='black', \n                           facecolor='white', \n                           colormap=plt.cm.Blues, \n                           zorder=5)\n\n# Set the title and axis labels\nax.set_title(title)\nax.set_xlabel('Product Category')\nax.set_ylabel('Percentage')\n\n# Show the plot\nplt.show()\n```\nThis code will create a treemap plot of the e-commerce sales distribution by product category, with the title and axis labels specified in the input. The plot will be displayed using Matplotlib.</s>",
    "QA": {
      "question": "What is the percentage difference between 'Health & Beauty' and 'Books & Media' product categories?",
      "answer_gt": "3%",
      "answer_pred": "The percentage difference between 'Health & Beauty' and 'Books & Media' product categories is 50%.</s>"
    }
  },
  {
    "imgname": "27",
    "title_gt": " Revenue Distribution in Sports and Entertainment Industry",
    "title_pred": " Revenue Distribution in Sports and Entertainment Industry ",
    "type_gt": "treemap",
    "type_pred": "treemap",
    "csv_gt": "Category \\t Percentage \\n Team Sports \\t 30 \\n Individual Sports \\t 20 \\n Concerts \\t 15 \\n Movies \\t 20 \\n Streaming Services \\t 10 \\n Video Games \\t 5 \\n ",
    "csv_pred": "Category \\t Percentage \\n Concerts \\t 25 \\n Streaming Services \\t 15 \\n Video Games \\t 10 \\n ",
    "description_pred": "The Revenue Distribution in Sports and Entertainment Industry treemap shows the percentage of revenue generated by different segments of the industry. According to the chart, Concerts generate 25% of the revenue, Streaming Services generate 15% of the revenue, and Video Games generate 10% of the revenue. This information is useful for understanding the revenue streams of the Sports and Entertainment Industry and for making informed decisions about investments and strategies.</s>",
    "summarization_pred": "The treemap chart shows the revenue distribution in the sports and entertainment industry. The top sector is Concerts with 25% of the revenue, followed by Streaming Services with 15%, and Video Games with 10%. This indicates that Concerts are the largest revenue generator in the industry, followed by Streaming Services and Video Games.</s>",
    "redrawing_code_pred": "Here is the Python code to redraw the treemap chart with the given data:\n```python\nimport matplotlib.pyplot as plt\nimport matplotlib.treemap as treemap\n\ndata = [\n    ('Concerts', 25),\n    ('Streaming Services', 15),\n    ('Video Games', 10)\n]\n\ntitle = 'Revenue Distribution in Sports and Entertainment Industry'\n\nfig, ax = plt.subplots()\ntreemap.to_treemap(data, ax=ax, path=None, fontsize=12, leafpad=0.2, colormap=plt.cm.Blues,\n                   leaflabel=lambda x: x[0], leaflabelpad=5, colormode='markers',\n                   edgecolor='black', edgewidth=0.5, aspect=1, pad=0.1,\n                   show_titles=True, title_fontsize=14, title_fontweight='bold',\n                   title_text='', ylabel_fontsize=12, ylabel_fontweight='bold',\n                   ylabel='Percentage', xlabel_fontsize=12, xlabel_fontweight='bold',\n                   xlabel='Revenue Source', aspect_mode='equal',\n                   show_xlabel=True, show_ylabel=True, show_xticks=True,\n                   show_yticks=True, grid=True, gridcolor='black', gridwidth=1,\n                   gridstyle='--', markevery=5, markerfacecolor='wheat',\n                   markeredgecolor='black', markerlinewidth=1,\n                   legend_fontsize=10, legend_loc='best', legend_prop={'fontsize': 10, 'frameon': True},\n                   show_legend=True, legend_title='',)\n\nplt.show()\n```\nThis code will create a treemap chart with the title \"Revenue Distribution in Sports and Entertainment Industry\" and the data provided. The chart will show the percentage of revenue for each category (Concerts, Streaming Services, and Video Games) using a blue color scheme.</s>",
    "QA": {
      "question": "What percentage of the revenue is obtained from Team Sports and Individual Sports combined?",
      "answer_gt": "50%",
      "answer_pred": "The percentage of the revenue obtained from Team Sports and Individual Sports combined is 40.</s>"
    }
  }
]